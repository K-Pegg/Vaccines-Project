{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import math\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "\n",
    "from sklearn.preprocessing import OneHotEncoder, StandardScaler, LabelEncoder\n",
    "\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.compose import ColumnTransformer\n",
    "\n",
    "from sklearn.impute import MissingIndicator, SimpleImputer\n",
    "from sklearn.tree import DecisionTreeClassifier, plot_tree\n",
    "from sklearn.dummy import DummyClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.multioutput import MultiOutputClassifier\n",
    "\n",
    "\n",
    "from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict\n",
    "from sklearn.feature_selection import SelectFromModel\n",
    "\n",
    "from sklearn.metrics import precision_score,classification_report, auc, ConfusionMatrixDisplay, RocCurveDisplay, confusion_matrix, roc_curve, precision_score, accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent_id</th>\n",
       "      <th>h1n1_concern</th>\n",
       "      <th>h1n1_knowledge</th>\n",
       "      <th>behavioral_antiviral_meds</th>\n",
       "      <th>behavioral_avoidance</th>\n",
       "      <th>behavioral_face_mask</th>\n",
       "      <th>behavioral_wash_hands</th>\n",
       "      <th>behavioral_large_gatherings</th>\n",
       "      <th>behavioral_outside_home</th>\n",
       "      <th>behavioral_touch_face</th>\n",
       "      <th>...</th>\n",
       "      <th>income_poverty</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>rent_or_own</th>\n",
       "      <th>employment_status</th>\n",
       "      <th>hhs_geo_region</th>\n",
       "      <th>census_msa</th>\n",
       "      <th>household_adults</th>\n",
       "      <th>household_children</th>\n",
       "      <th>employment_industry</th>\n",
       "      <th>employment_occupation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>oxchjgsf</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>bhuqouqj</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>pxcmvdjn</td>\n",
       "      <td>xgwztkwe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Employed</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>rucpziij</td>\n",
       "      <td>xtkaffoo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Employed</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>wxleyezf</td>\n",
       "      <td>emcorrxb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26702</th>\n",
       "      <td>26702</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26703</th>\n",
       "      <td>26703</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>fcxhlnwr</td>\n",
       "      <td>cmhcxjea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26704</th>\n",
       "      <td>26704</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26705</th>\n",
       "      <td>26705</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>fcxhlnwr</td>\n",
       "      <td>haliazsg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26706</th>\n",
       "      <td>26706</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>mlyzmhmf</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26707 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       respondent_id  h1n1_concern  h1n1_knowledge  behavioral_antiviral_meds  \\\n",
       "0                  0           1.0             0.0                        0.0   \n",
       "1                  1           3.0             2.0                        0.0   \n",
       "2                  2           1.0             1.0                        0.0   \n",
       "3                  3           1.0             1.0                        0.0   \n",
       "4                  4           2.0             1.0                        0.0   \n",
       "...              ...           ...             ...                        ...   \n",
       "26702          26702           2.0             0.0                        0.0   \n",
       "26703          26703           1.0             2.0                        0.0   \n",
       "26704          26704           2.0             2.0                        0.0   \n",
       "26705          26705           1.0             1.0                        0.0   \n",
       "26706          26706           0.0             0.0                        0.0   \n",
       "\n",
       "       behavioral_avoidance  behavioral_face_mask  behavioral_wash_hands  \\\n",
       "0                       0.0                   0.0                    0.0   \n",
       "1                       1.0                   0.0                    1.0   \n",
       "2                       1.0                   0.0                    0.0   \n",
       "3                       1.0                   0.0                    1.0   \n",
       "4                       1.0                   0.0                    1.0   \n",
       "...                     ...                   ...                    ...   \n",
       "26702                   1.0                   0.0                    0.0   \n",
       "26703                   1.0                   0.0                    1.0   \n",
       "26704                   1.0                   1.0                    1.0   \n",
       "26705                   0.0                   0.0                    0.0   \n",
       "26706                   1.0                   0.0                    0.0   \n",
       "\n",
       "       behavioral_large_gatherings  behavioral_outside_home  \\\n",
       "0                              0.0                      1.0   \n",
       "1                              0.0                      1.0   \n",
       "2                              0.0                      0.0   \n",
       "3                              1.0                      0.0   \n",
       "4                              1.0                      0.0   \n",
       "...                            ...                      ...   \n",
       "26702                          0.0                      1.0   \n",
       "26703                          0.0                      0.0   \n",
       "26704                          1.0                      0.0   \n",
       "26705                          0.0                      0.0   \n",
       "26706                          0.0                      0.0   \n",
       "\n",
       "       behavioral_touch_face  ...             income_poverty  marital_status  \\\n",
       "0                        1.0  ...              Below Poverty     Not Married   \n",
       "1                        1.0  ...              Below Poverty     Not Married   \n",
       "2                        0.0  ...  <= $75,000, Above Poverty     Not Married   \n",
       "3                        0.0  ...              Below Poverty     Not Married   \n",
       "4                        1.0  ...  <= $75,000, Above Poverty         Married   \n",
       "...                      ...  ...                        ...             ...   \n",
       "26702                    0.0  ...  <= $75,000, Above Poverty     Not Married   \n",
       "26703                    0.0  ...  <= $75,000, Above Poverty     Not Married   \n",
       "26704                    1.0  ...                        NaN     Not Married   \n",
       "26705                    NaN  ...  <= $75,000, Above Poverty         Married   \n",
       "26706                    0.0  ...  <= $75,000, Above Poverty         Married   \n",
       "\n",
       "       rent_or_own   employment_status  hhs_geo_region  \\\n",
       "0              Own  Not in Labor Force        oxchjgsf   \n",
       "1             Rent            Employed        bhuqouqj   \n",
       "2              Own            Employed        qufhixun   \n",
       "3             Rent  Not in Labor Force        lrircsnp   \n",
       "4              Own            Employed        qufhixun   \n",
       "...            ...                 ...             ...   \n",
       "26702          Own  Not in Labor Force        qufhixun   \n",
       "26703         Rent            Employed        lzgpxyit   \n",
       "26704          Own                 NaN        lzgpxyit   \n",
       "26705         Rent            Employed        lrircsnp   \n",
       "26706          Own  Not in Labor Force        mlyzmhmf   \n",
       "\n",
       "                     census_msa  household_adults  household_children  \\\n",
       "0                       Non-MSA               0.0                 0.0   \n",
       "1      MSA, Not Principle  City               0.0                 0.0   \n",
       "2      MSA, Not Principle  City               2.0                 0.0   \n",
       "3           MSA, Principle City               0.0                 0.0   \n",
       "4      MSA, Not Principle  City               1.0                 0.0   \n",
       "...                         ...               ...                 ...   \n",
       "26702                   Non-MSA               0.0                 0.0   \n",
       "26703       MSA, Principle City               1.0                 0.0   \n",
       "26704  MSA, Not Principle  City               0.0                 0.0   \n",
       "26705                   Non-MSA               1.0                 0.0   \n",
       "26706       MSA, Principle City               1.0                 0.0   \n",
       "\n",
       "       employment_industry  employment_occupation  \n",
       "0                      NaN                    NaN  \n",
       "1                 pxcmvdjn               xgwztkwe  \n",
       "2                 rucpziij               xtkaffoo  \n",
       "3                      NaN                    NaN  \n",
       "4                 wxleyezf               emcorrxb  \n",
       "...                    ...                    ...  \n",
       "26702                  NaN                    NaN  \n",
       "26703             fcxhlnwr               cmhcxjea  \n",
       "26704                  NaN                    NaN  \n",
       "26705             fcxhlnwr               haliazsg  \n",
       "26706                  NaN                    NaN  \n",
       "\n",
       "[26707 rows x 36 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Reading the dataset \n",
    "\n",
    "df_f = pd.read_csv(\"../data/training_set_features.csv\")\n",
    "df_f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_group</th>\n",
       "      <th>education</th>\n",
       "      <th>race</th>\n",
       "      <th>sex</th>\n",
       "      <th>income_poverty</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>rent_or_own</th>\n",
       "      <th>employment_status</th>\n",
       "      <th>hhs_geo_region</th>\n",
       "      <th>census_msa</th>\n",
       "      <th>employment_industry</th>\n",
       "      <th>employment_occupation</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>55 - 64 Years</td>\n",
       "      <td>&lt; 12 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>oxchjgsf</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35 - 44 Years</td>\n",
       "      <td>12 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>bhuqouqj</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>pxcmvdjn</td>\n",
       "      <td>xgwztkwe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>College Graduate</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Employed</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>rucpziij</td>\n",
       "      <td>xtkaffoo</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>12 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>Below Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>45 - 54 Years</td>\n",
       "      <td>Some College</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Employed</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>wxleyezf</td>\n",
       "      <td>emcorrxb</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26702</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>Some College</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26703</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>College Graduate</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>fcxhlnwr</td>\n",
       "      <td>cmhcxjea</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26704</th>\n",
       "      <td>55 - 64 Years</td>\n",
       "      <td>Some College</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Not Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>NaN</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26705</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>Some College</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>Female</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Rent</td>\n",
       "      <td>Employed</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>Non-MSA</td>\n",
       "      <td>fcxhlnwr</td>\n",
       "      <td>haliazsg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26706</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>Some College</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>&lt;= $75,000, Above Poverty</td>\n",
       "      <td>Married</td>\n",
       "      <td>Own</td>\n",
       "      <td>Not in Labor Force</td>\n",
       "      <td>mlyzmhmf</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26707 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           age_group         education      race     sex  \\\n",
       "0      55 - 64 Years        < 12 Years     White  Female   \n",
       "1      35 - 44 Years          12 Years     White    Male   \n",
       "2      18 - 34 Years  College Graduate     White    Male   \n",
       "3          65+ Years          12 Years     White  Female   \n",
       "4      45 - 54 Years      Some College     White  Female   \n",
       "...              ...               ...       ...     ...   \n",
       "26702      65+ Years      Some College     White  Female   \n",
       "26703  18 - 34 Years  College Graduate     White    Male   \n",
       "26704  55 - 64 Years      Some College     White  Female   \n",
       "26705  18 - 34 Years      Some College  Hispanic  Female   \n",
       "26706      65+ Years      Some College     White    Male   \n",
       "\n",
       "                  income_poverty marital_status rent_or_own  \\\n",
       "0                  Below Poverty    Not Married         Own   \n",
       "1                  Below Poverty    Not Married        Rent   \n",
       "2      <= $75,000, Above Poverty    Not Married         Own   \n",
       "3                  Below Poverty    Not Married        Rent   \n",
       "4      <= $75,000, Above Poverty        Married         Own   \n",
       "...                          ...            ...         ...   \n",
       "26702  <= $75,000, Above Poverty    Not Married         Own   \n",
       "26703  <= $75,000, Above Poverty    Not Married        Rent   \n",
       "26704                        NaN    Not Married         Own   \n",
       "26705  <= $75,000, Above Poverty        Married        Rent   \n",
       "26706  <= $75,000, Above Poverty        Married         Own   \n",
       "\n",
       "        employment_status hhs_geo_region                census_msa  \\\n",
       "0      Not in Labor Force       oxchjgsf                   Non-MSA   \n",
       "1                Employed       bhuqouqj  MSA, Not Principle  City   \n",
       "2                Employed       qufhixun  MSA, Not Principle  City   \n",
       "3      Not in Labor Force       lrircsnp       MSA, Principle City   \n",
       "4                Employed       qufhixun  MSA, Not Principle  City   \n",
       "...                   ...            ...                       ...   \n",
       "26702  Not in Labor Force       qufhixun                   Non-MSA   \n",
       "26703            Employed       lzgpxyit       MSA, Principle City   \n",
       "26704                 NaN       lzgpxyit  MSA, Not Principle  City   \n",
       "26705            Employed       lrircsnp                   Non-MSA   \n",
       "26706  Not in Labor Force       mlyzmhmf       MSA, Principle City   \n",
       "\n",
       "      employment_industry employment_occupation  \n",
       "0                     NaN                   NaN  \n",
       "1                pxcmvdjn              xgwztkwe  \n",
       "2                rucpziij              xtkaffoo  \n",
       "3                     NaN                   NaN  \n",
       "4                wxleyezf              emcorrxb  \n",
       "...                   ...                   ...  \n",
       "26702                 NaN                   NaN  \n",
       "26703            fcxhlnwr              cmhcxjea  \n",
       "26704                 NaN                   NaN  \n",
       "26705            fcxhlnwr              haliazsg  \n",
       "26706                 NaN                   NaN  \n",
       "\n",
       "[26707 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get a list of column names with dtype 'object'\n",
    "object_columns = df_f.select_dtypes(include=['object']).columns.tolist()\n",
    "num_columns = df_f.select_dtypes(exclude=['object']).columns.tolist()\n",
    "df_f_cat = df_f[object_columns]\n",
    "df_f_cat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 26707 entries, 0 to 26706\n",
      "Data columns (total 12 columns):\n",
      " #   Column                 Non-Null Count  Dtype \n",
      "---  ------                 --------------  ----- \n",
      " 0   age_group              26707 non-null  object\n",
      " 1   education              25300 non-null  object\n",
      " 2   race                   26707 non-null  object\n",
      " 3   sex                    26707 non-null  object\n",
      " 4   income_poverty         22284 non-null  object\n",
      " 5   marital_status         25299 non-null  object\n",
      " 6   rent_or_own            24665 non-null  object\n",
      " 7   employment_status      25244 non-null  object\n",
      " 8   hhs_geo_region         26707 non-null  object\n",
      " 9   census_msa             26707 non-null  object\n",
      " 10  employment_industry    13377 non-null  object\n",
      " 11  employment_occupation  13237 non-null  object\n",
      "dtypes: object(12)\n",
      "memory usage: 2.4+ MB\n"
     ]
    }
   ],
   "source": [
    "df_f_cat.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>respondent_id</th>\n",
       "      <th>h1n1_vaccine</th>\n",
       "      <th>seasonal_vaccine</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26702</th>\n",
       "      <td>26702</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26703</th>\n",
       "      <td>26703</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26704</th>\n",
       "      <td>26704</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26705</th>\n",
       "      <td>26705</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26706</th>\n",
       "      <td>26706</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26707 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       respondent_id  h1n1_vaccine  seasonal_vaccine\n",
       "0                  0             0                 0\n",
       "1                  1             0                 1\n",
       "2                  2             0                 0\n",
       "3                  3             0                 1\n",
       "4                  4             0                 0\n",
       "...              ...           ...               ...\n",
       "26702          26702             0                 0\n",
       "26703          26703             0                 0\n",
       "26704          26704             0                 1\n",
       "26705          26705             0                 0\n",
       "26706          26706             0                 0\n",
       "\n",
       "[26707 rows x 3 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_t = pd.read_csv(\"../data/training_set_labels.csv\")\n",
    "df_t"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_f_cat.drop('age_group', axis=1)\n",
    "y = df_t[\"h1n1_vaccine\"]\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is the accuracy score: 0.7874687968047928\n"
     ]
    }
   ],
   "source": [
    "#\n",
    "dummy_model = DummyClassifier(strategy='most_frequent')\n",
    "#\n",
    "dummy_model.fit(X_train, y_train)\n",
    "#\n",
    "dummy_model.predict(X_train)\n",
    "#Accuracy score\n",
    "print ('This is the accuracy score:', dummy_model.score(X_train, y_train))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7874687968047928"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "cv_results = cross_val_score(dummy_model, X_train, y_train, cv=5)\n",
    "cv_results.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "col_n_na= ['age_group','race','sex','hhs_geo_region','census_msa']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_group</th>\n",
       "      <th>race</th>\n",
       "      <th>sex</th>\n",
       "      <th>hhs_geo_region</th>\n",
       "      <th>census_msa</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>55 - 64 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>oxchjgsf</td>\n",
       "      <td>Non-MSA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>35 - 44 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>bhuqouqj</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>45 - 54 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26702</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>qufhixun</td>\n",
       "      <td>Non-MSA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26703</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26704</th>\n",
       "      <td>55 - 64 Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Female</td>\n",
       "      <td>lzgpxyit</td>\n",
       "      <td>MSA, Not Principle  City</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26705</th>\n",
       "      <td>18 - 34 Years</td>\n",
       "      <td>Hispanic</td>\n",
       "      <td>Female</td>\n",
       "      <td>lrircsnp</td>\n",
       "      <td>Non-MSA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26706</th>\n",
       "      <td>65+ Years</td>\n",
       "      <td>White</td>\n",
       "      <td>Male</td>\n",
       "      <td>mlyzmhmf</td>\n",
       "      <td>MSA, Principle City</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26707 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           age_group      race     sex hhs_geo_region  \\\n",
       "0      55 - 64 Years     White  Female       oxchjgsf   \n",
       "1      35 - 44 Years     White    Male       bhuqouqj   \n",
       "2      18 - 34 Years     White    Male       qufhixun   \n",
       "3          65+ Years     White  Female       lrircsnp   \n",
       "4      45 - 54 Years     White  Female       qufhixun   \n",
       "...              ...       ...     ...            ...   \n",
       "26702      65+ Years     White  Female       qufhixun   \n",
       "26703  18 - 34 Years     White    Male       lzgpxyit   \n",
       "26704  55 - 64 Years     White  Female       lzgpxyit   \n",
       "26705  18 - 34 Years  Hispanic  Female       lrircsnp   \n",
       "26706      65+ Years     White    Male       mlyzmhmf   \n",
       "\n",
       "                     census_msa  \n",
       "0                       Non-MSA  \n",
       "1      MSA, Not Principle  City  \n",
       "2      MSA, Not Principle  City  \n",
       "3           MSA, Principle City  \n",
       "4      MSA, Not Principle  City  \n",
       "...                         ...  \n",
       "26702                   Non-MSA  \n",
       "26703       MSA, Principle City  \n",
       "26704  MSA, Not Principle  City  \n",
       "26705                   Non-MSA  \n",
       "26706       MSA, Principle City  \n",
       "\n",
       "[26707 rows x 5 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X1 = df_f_cat[col_n_na]\n",
    "X1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_group_18 - 34 Years</th>\n",
       "      <th>age_group_35 - 44 Years</th>\n",
       "      <th>age_group_45 - 54 Years</th>\n",
       "      <th>age_group_55 - 64 Years</th>\n",
       "      <th>age_group_65+ Years</th>\n",
       "      <th>race_Black</th>\n",
       "      <th>race_Hispanic</th>\n",
       "      <th>race_Other or Multiple</th>\n",
       "      <th>race_White</th>\n",
       "      <th>sex_Female</th>\n",
       "      <th>...</th>\n",
       "      <th>hhs_geo_region_fpwskwrf</th>\n",
       "      <th>hhs_geo_region_kbazzjca</th>\n",
       "      <th>hhs_geo_region_lrircsnp</th>\n",
       "      <th>hhs_geo_region_lzgpxyit</th>\n",
       "      <th>hhs_geo_region_mlyzmhmf</th>\n",
       "      <th>hhs_geo_region_oxchjgsf</th>\n",
       "      <th>hhs_geo_region_qufhixun</th>\n",
       "      <th>census_msa_MSA, Not Principle  City</th>\n",
       "      <th>census_msa_MSA, Principle City</th>\n",
       "      <th>census_msa_Non-MSA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   age_group_18 - 34 Years  age_group_35 - 44 Years  age_group_45 - 54 Years  \\\n",
       "0                      0.0                      0.0                      0.0   \n",
       "1                      0.0                      1.0                      0.0   \n",
       "2                      1.0                      0.0                      0.0   \n",
       "3                      0.0                      0.0                      0.0   \n",
       "4                      0.0                      0.0                      1.0   \n",
       "\n",
       "   age_group_55 - 64 Years  age_group_65+ Years  race_Black  race_Hispanic  \\\n",
       "0                      1.0                  0.0         0.0            0.0   \n",
       "1                      0.0                  0.0         0.0            0.0   \n",
       "2                      0.0                  0.0         0.0            0.0   \n",
       "3                      0.0                  1.0         0.0            0.0   \n",
       "4                      0.0                  0.0         0.0            0.0   \n",
       "\n",
       "   race_Other or Multiple  race_White  sex_Female  ...  \\\n",
       "0                     0.0         1.0         1.0  ...   \n",
       "1                     0.0         1.0         0.0  ...   \n",
       "2                     0.0         1.0         0.0  ...   \n",
       "3                     0.0         1.0         1.0  ...   \n",
       "4                     0.0         1.0         1.0  ...   \n",
       "\n",
       "   hhs_geo_region_fpwskwrf  hhs_geo_region_kbazzjca  hhs_geo_region_lrircsnp  \\\n",
       "0                      0.0                      0.0                      0.0   \n",
       "1                      0.0                      0.0                      0.0   \n",
       "2                      0.0                      0.0                      0.0   \n",
       "3                      0.0                      0.0                      1.0   \n",
       "4                      0.0                      0.0                      0.0   \n",
       "\n",
       "   hhs_geo_region_lzgpxyit  hhs_geo_region_mlyzmhmf  hhs_geo_region_oxchjgsf  \\\n",
       "0                      0.0                      0.0                      1.0   \n",
       "1                      0.0                      0.0                      0.0   \n",
       "2                      0.0                      0.0                      0.0   \n",
       "3                      0.0                      0.0                      0.0   \n",
       "4                      0.0                      0.0                      0.0   \n",
       "\n",
       "   hhs_geo_region_qufhixun  census_msa_MSA, Not Principle  City  \\\n",
       "0                      0.0                                  0.0   \n",
       "1                      0.0                                  1.0   \n",
       "2                      1.0                                  1.0   \n",
       "3                      0.0                                  0.0   \n",
       "4                      1.0                                  1.0   \n",
       "\n",
       "   census_msa_MSA, Principle City  census_msa_Non-MSA  \n",
       "0                             0.0                 1.0  \n",
       "1                             0.0                 0.0  \n",
       "2                             0.0                 0.0  \n",
       "3                             1.0                 0.0  \n",
       "4                             0.0                 0.0  \n",
       "\n",
       "[5 rows x 24 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# One-hot encode the training data and show the resulting DataFrame with proper column names\n",
    "ohe = OneHotEncoder()\n",
    "\n",
    "\n",
    "X1_clean = ohe.fit_transform(X1).toarray()\n",
    "\n",
    "# Creating this DataFrame is not necessary its only to show the result of the ohe\n",
    "X1_ohe_df = pd.DataFrame(X1_clean, columns=ohe.get_feature_names(X1.columns))\n",
    "\n",
    "X1_ohe_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# full data set model "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['respondent_id',\n",
       " 'h1n1_concern',\n",
       " 'h1n1_knowledge',\n",
       " 'behavioral_antiviral_meds',\n",
       " 'behavioral_avoidance',\n",
       " 'behavioral_face_mask',\n",
       " 'behavioral_wash_hands',\n",
       " 'behavioral_large_gatherings',\n",
       " 'behavioral_outside_home',\n",
       " 'behavioral_touch_face',\n",
       " 'doctor_recc_h1n1',\n",
       " 'doctor_recc_seasonal',\n",
       " 'chronic_med_condition',\n",
       " 'child_under_6_months',\n",
       " 'health_worker',\n",
       " 'health_insurance',\n",
       " 'opinion_h1n1_vacc_effective',\n",
       " 'opinion_h1n1_risk',\n",
       " 'opinion_h1n1_sick_from_vacc',\n",
       " 'opinion_seas_vacc_effective',\n",
       " 'opinion_seas_risk',\n",
       " 'opinion_seas_sick_from_vacc',\n",
       " 'household_adults',\n",
       " 'household_children']"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_n = pd.concat([df_f[num_columns], df_t['h1n1_vaccine']], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age_group_18 - 34 Years                    0\n",
       "age_group_35 - 44 Years                    0\n",
       "age_group_45 - 54 Years                    0\n",
       "age_group_55 - 64 Years                    0\n",
       "age_group_65+ Years                        0\n",
       "race_Black                                 0\n",
       "race_Hispanic                              0\n",
       "race_Other or Multiple                     0\n",
       "race_White                                 0\n",
       "sex_Female                                 0\n",
       "sex_Male                                   0\n",
       "hhs_geo_region_atmpeygn                    0\n",
       "hhs_geo_region_bhuqouqj                    0\n",
       "hhs_geo_region_dqpwygqj                    0\n",
       "hhs_geo_region_fpwskwrf                    0\n",
       "hhs_geo_region_kbazzjca                    0\n",
       "hhs_geo_region_lrircsnp                    0\n",
       "hhs_geo_region_lzgpxyit                    0\n",
       "hhs_geo_region_mlyzmhmf                    0\n",
       "hhs_geo_region_oxchjgsf                    0\n",
       "hhs_geo_region_qufhixun                    0\n",
       "census_msa_MSA, Not Principle  City        0\n",
       "census_msa_MSA, Principle City             0\n",
       "census_msa_Non-MSA                         0\n",
       "respondent_id                              0\n",
       "h1n1_concern                              92\n",
       "h1n1_knowledge                           116\n",
       "behavioral_antiviral_meds                 71\n",
       "behavioral_avoidance                     208\n",
       "behavioral_face_mask                      19\n",
       "behavioral_wash_hands                     42\n",
       "behavioral_large_gatherings               87\n",
       "behavioral_outside_home                   82\n",
       "behavioral_touch_face                    128\n",
       "doctor_recc_h1n1                        2160\n",
       "doctor_recc_seasonal                    2160\n",
       "chronic_med_condition                    971\n",
       "child_under_6_months                     820\n",
       "health_worker                            804\n",
       "health_insurance                       12274\n",
       "opinion_h1n1_vacc_effective              391\n",
       "opinion_h1n1_risk                        388\n",
       "opinion_h1n1_sick_from_vacc              395\n",
       "opinion_seas_vacc_effective              462\n",
       "opinion_seas_risk                        514\n",
       "opinion_seas_sick_from_vacc              537\n",
       "household_adults                         249\n",
       "household_children                       249\n",
       "h1n1_vaccine                               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_c = pd.concat([X1_ohe_df, X_n], axis=1)\n",
    "X_c.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age_group_18 - 34 Years                0\n",
       "age_group_35 - 44 Years                0\n",
       "age_group_45 - 54 Years                0\n",
       "age_group_55 - 64 Years                0\n",
       "age_group_65+ Years                    0\n",
       "race_Black                             0\n",
       "race_Hispanic                          0\n",
       "race_Other or Multiple                 0\n",
       "race_White                             0\n",
       "sex_Female                             0\n",
       "sex_Male                               0\n",
       "hhs_geo_region_atmpeygn                0\n",
       "hhs_geo_region_bhuqouqj                0\n",
       "hhs_geo_region_dqpwygqj                0\n",
       "hhs_geo_region_fpwskwrf                0\n",
       "hhs_geo_region_kbazzjca                0\n",
       "hhs_geo_region_lrircsnp                0\n",
       "hhs_geo_region_lzgpxyit                0\n",
       "hhs_geo_region_mlyzmhmf                0\n",
       "hhs_geo_region_oxchjgsf                0\n",
       "hhs_geo_region_qufhixun                0\n",
       "census_msa_MSA, Not Principle  City    0\n",
       "census_msa_MSA, Principle City         0\n",
       "census_msa_Non-MSA                     0\n",
       "respondent_id                          0\n",
       "h1n1_concern                           0\n",
       "h1n1_knowledge                         0\n",
       "behavioral_antiviral_meds              0\n",
       "behavioral_avoidance                   0\n",
       "behavioral_face_mask                   0\n",
       "behavioral_wash_hands                  0\n",
       "behavioral_large_gatherings            0\n",
       "behavioral_outside_home                0\n",
       "behavioral_touch_face                  0\n",
       "doctor_recc_h1n1                       0\n",
       "doctor_recc_seasonal                   0\n",
       "chronic_med_condition                  0\n",
       "child_under_6_months                   0\n",
       "health_worker                          0\n",
       "health_insurance                       0\n",
       "opinion_h1n1_vacc_effective            0\n",
       "opinion_h1n1_risk                      0\n",
       "opinion_h1n1_sick_from_vacc            0\n",
       "opinion_seas_vacc_effective            0\n",
       "opinion_seas_risk                      0\n",
       "opinion_seas_sick_from_vacc            0\n",
       "household_adults                       0\n",
       "household_children                     0\n",
       "h1n1_vaccine                           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dropping the missing values \n",
    "X_cm= X_c.dropna()\n",
    "X_cm.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(13506, 49)"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_cm.shape\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#determine X_sm and y_sm \n",
    "X_sm= X_cm.drop('h1n1_vaccine', axis =1)\n",
    "y_sm =X_cm['h1n1_vaccine']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Performing the split test\n",
    "X_tr_samp, X_te_samp, y_tr_samp, y_te_samp = train_test_split(\n",
    "    X_sm, y_sm,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    9475\n",
       "1    4031\n",
       "Name: h1n1_vaccine, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_sm.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scaling the the data\n",
    "scaler = StandardScaler()\n",
    "scaler.fit(X_tr_samp)\n",
    "X_tr_sc = scaler.transform(X_tr_samp)\n",
    "X_te_sc = scaler.transform(X_te_samp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "from imblearn.over_sampling import SMOTE\n",
    "# Instantiate our SMOTE\n",
    "sm = SMOTE(random_state=42)\n",
    "# Fit and resample on the training data! X_tr_samp, y_tr_samp\n",
    "X_tr_smote, y_tr_smote = sm.fit_resample(X_tr_sc, y_tr_samp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    7069\n",
       "0    7069\n",
       "Name: h1n1_vaccine, dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#sanity check \n",
    "y_tr_smote.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ---- Decision Tree Model 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(random_state=42)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#instantiation \n",
    "rf_clf_sm = DecisionTreeClassifier(random_state=42)\n",
    "#fitting the model \n",
    "rf_clf_sm.fit(X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "class mcalculation():\n",
    "    def __init__(self, model, model_name, X, y, cv_now=True):\n",
    "        self.model = model\n",
    "        self.name = model_name\n",
    "        self.X = X\n",
    "        self.y = y\n",
    "        # For CV results\n",
    "        self.cv_results = None\n",
    "        self.cv_mean = None\n",
    "        self.cv_median = None\n",
    "        self.cv_std = None\n",
    "        self.precision_results = None  # New attribute for precision\n",
    "        self.precision_mean = None\n",
    "        self.precision_median = None\n",
    "        self.precision_std = None\n",
    "        #\n",
    "        if cv_now:\n",
    "            self.cross_validate()\n",
    "\n",
    "    def cross_validate(self, X=None, y=None, kfolds=10):\n",
    "        '''\n",
    "        Perform cross-validation and return results.\n",
    "\n",
    "        Args: \n",
    "          X:\n",
    "            Optional; Training data to perform CV on. Otherwise use X from object\n",
    "          y:\n",
    "            Optional; Training data to perform CV on. Otherwise use y from object\n",
    "          kfolds:\n",
    "            Optional; Number of folds for CV (default is 10)  \n",
    "        '''\n",
    "\n",
    "        cv_X = X if X else self.X\n",
    "        cv_y = y if y else self.y\n",
    "\n",
    "        # Accuracy scores\n",
    "        self.cv_results = cross_val_score(self.model, cv_X, cv_y, cv=kfolds)\n",
    "        self.cv_mean = np.mean(self.cv_results)\n",
    "        self.cv_median = np.median(self.cv_results)\n",
    "        self.cv_std = np.std(self.cv_results)\n",
    "\n",
    "        # Precision scores\n",
    "        y_pred = cross_val_predict(self.model, cv_X, cv_y, cv=kfolds)\n",
    "        self.precision_results = [precision_score(cv_y, y_pred)]\n",
    "        self.precision_mean = np.mean(self.precision_results)\n",
    "        self.precision_median = np.median(self.precision_results)\n",
    "        self.precision_std = np.std(self.precision_results)\n",
    "\n",
    "    def print_cv_summary(self):\n",
    "        cv_summary = (\n",
    "            f'''CV Results for `{self.name}` model:\n",
    "            {self.cv_mean:.5f} ± {self.cv_std:.5f} accuracy\n",
    "            {self.precision_mean:.5f} ± {self.precision_std:.5f} precision\n",
    "        ''')\n",
    "        print(cv_summary)\n",
    "\n",
    "    def plot_cv(self, ax):\n",
    "        '''\n",
    "        Plot the cross-validation values using the array of results and given \n",
    "        Axis for plotting.\n",
    "        '''\n",
    "        ax.set_title(f'CV Results for `{self.name}` Model')\n",
    "        # Thinner violinplot with higher bw\n",
    "        sns.violinplot(y=self.cv_results, ax=ax, bw=.4)\n",
    "        sns.swarmplot(\n",
    "            y=self.cv_results,\n",
    "            color='orange',\n",
    "            size=10,\n",
    "            alpha=0.8,\n",
    "            ax=ax\n",
    "        )\n",
    "\n",
    "        return ax"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CV Results for `Decision Tree` model:\n",
      "            0.79623 ± 0.09573 accuracy\n",
      "            0.79635 ± 0.00000 precision\n",
      "        \n"
     ]
    }
   ],
   "source": [
    "rf_clf_sm_model_results = mcalculation(\n",
    "                        model=rf_clf_sm ,\n",
    "                        model_name='Decision Tree',\n",
    "                        X=X_tr_smote, \n",
    "                        y=y_tr_smote\n",
    ");\n",
    "rf_clf_sm_model_results.print_cv_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "def evaluate_model_performance(model, X_train_scaled, y_train):\n",
    "    #X_test_scaled, y_test\n",
    "    # Calculate roc-auc for test set\n",
    "    #test_probs = model.predict_proba(X_test_scaled)[:, 1]\n",
    "   # fpr_test, tpr_test, thresholds_test = roc_curve(y_test, test_probs)\n",
    "   # roc_auc_test = auc(fpr_test, tpr_test)\n",
    "\n",
    "    # Print AUC for the test set\n",
    "   # print('\\nAUC for Test Set is: {:.2f}'.format(roc_auc_test))\n",
    "\n",
    "    # Calculate roc-auc for train set\n",
    "    train_probs = model.predict_proba(X_train_scaled)[:, 1]\n",
    "    fpr_train, tpr_train, thresholds_train = roc_curve(y_train, train_probs)\n",
    "    roc_auc_train = auc(fpr_train, tpr_train)\n",
    "\n",
    "    # Print AUC for the train set\n",
    "    #print('\\nAUC for Train Set is: {:.2f}'.format(roc_auc_train))\n",
    "\n",
    "    # Plot ROC curves\n",
    "    plt.figure(figsize=(12, 6))\n",
    "\n",
    "    # Plot ROC curve for test set\n",
    "   # plt.subplot(1, 2, 1)\n",
    "    #plt.plot(fpr_test, tpr_test, color='darkorange', lw=2, label='ROC curve (area = {:.2f})'.format(roc_auc_test))\n",
    "   # plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "   # plt.xlabel('False Positive Rate')\n",
    "   # plt.ylabel('True Positive Rate')\n",
    "   # plt.title('ROC Curve - Test Set')\n",
    "    #plt.legend(loc='lower right')\n",
    "\n",
    "    # Plot ROC curve for train set\n",
    "    plt.subplot(1, 2, 2)\n",
    "    plt.plot(fpr_train, tpr_train, color='darkorange', lw=2, label='ROC curve (area = {:.2f})'.format(roc_auc_train))\n",
    "    plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n",
    "    plt.xlabel('False Positive Rate')\n",
    "    plt.ylabel('True Positive Rate')\n",
    "    plt.title('ROC Curve - Train Set')\n",
    "    plt.legend(loc='lower right')\n",
    "\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "    # Create and print a confusion matrix\n",
    "   # print('\\nConfusion Matrix')\n",
    "  #  print('----------------')\n",
    "    #y_pred = model.predict(X_test_scaled)\n",
    "   # confusion_matrix = pd.crosstab(y_test, y_pred, rownames=['True'], colnames=['Predicted'], margins=True)\n",
    "  #  print(confusion_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "evaluate_model_performance(rf_clf_sm, X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7892312410785269"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.model_selection import cross_val_score\n",
    "cv_results = cross_val_score(rf_clf_sm, X_tr_smote, y_tr_smote, cv=5)\n",
    "cv_results.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters found:  {'max_depth': 10}\n",
      "Best cross-validated accuracy: 0.83\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'max_depth': [5, 10, 20],\n",
    "}\n",
    "\n",
    "rf_model = DecisionTreeClassifier()\n",
    "\n",
    "grid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\n",
    "grid_search.fit(X_tr_smote, y_tr_smote)\n",
    "\n",
    "#Best parameters\n",
    "print(\"Best parameters found: \", grid_search.best_params_)\n",
    "\n",
    "#Best cross-validated score\n",
    "print(\"Best cross-validated accuracy: {:.2f}\".format(grid_search.best_score_))\n",
    "\n",
    "#Evaluate on the test set\n",
    "#y_pred = grid_search.predict(X_test_scaled)\n",
    "#accuracy = accuracy_score(y_test, y_pred)\n",
    "#print(\"Test set accuracy: {:.2f}\".format(accuracy))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters found:  {'max_depth': 8, 'min_samples_leaf': 2, 'min_samples_split': 10}\n",
      "Best cross-validated accuracy: 0.83\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'max_depth': [8, 10, 12],\n",
    "    'min_samples_leaf': [1,2,3],\n",
    "    'min_samples_split':[8,10,12],\n",
    "}\n",
    "\n",
    "rf_model = DecisionTreeClassifier()\n",
    "\n",
    "grid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\n",
    "grid_search.fit(X_tr_smote, y_tr_smote)\n",
    "\n",
    "#Best parameters\n",
    "print(\"Best parameters found: \", grid_search.best_params_)\n",
    "\n",
    "#Best cross-validated score\n",
    "print(\"Best cross-validated accuracy: {:.2f}\".format(grid_search.best_score_))\n",
    "\n",
    "#Evaluate on the test set\n",
    "#y_pred = grid_search.predict(X_test_scaled)\n",
    "#accuracy = accuracy_score(y_test, y_pred)\n",
    "#print(\"Test set accuracy: {:.2f}\".format(accuracy))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Best parameters found:  {'max_depth': 10, 'min_samples_leaf': 2, 'min_samples_split': 10}\n",
    "Best cross-validated accuracy: 0.83"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters found:  {'max_depth': 8, 'min_samples_leaf': 3, 'min_samples_split': 9}\n",
      "Best cross-validated accuracy: 0.83\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'max_depth': [7, 8, 9],\n",
    "    'min_samples_leaf': [1,2,3],\n",
    "    'min_samples_split':[9,10,11],\n",
    "}\n",
    "\n",
    "rf_model = DecisionTreeClassifier()\n",
    "\n",
    "grid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\n",
    "grid_search.fit(X_tr_smote, y_tr_smote)\n",
    "\n",
    "#Best parameters\n",
    "print(\"Best parameters found: \", grid_search.best_params_)\n",
    "\n",
    "#Best cross-validated score\n",
    "print(\"Best cross-validated accuracy: {:.2f}\".format(grid_search.best_score_))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters found:  {'max_depth': 8, 'min_samples_leaf': 2, 'min_samples_split': 12}\n",
      "Best cross-validated accuracy: 0.83\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'max_depth': [8],\n",
    "    'min_samples_leaf': [2],\n",
    "    'min_samples_split':[10,11, 12],\n",
    "}\n",
    "\n",
    "rf_model = DecisionTreeClassifier()\n",
    "\n",
    "grid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\n",
    "grid_search.fit(X_tr_smote, y_tr_smote)\n",
    "\n",
    "#Best parameters\n",
    "print(\"Best parameters found: \", grid_search.best_params_)\n",
    "\n",
    "#Best cross-validated score\n",
    "print(\"Best cross-validated accuracy: {:.2f}\".format(grid_search.best_score_))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ---- Decision Tree Model 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(max_depth=8, min_samples_leaf=2, min_samples_split=11,\n",
       "                       random_state=42)"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#instantiation \n",
    "rf_clf_sm2 = DecisionTreeClassifier(max_depth=8, min_samples_leaf=2, min_samples_split=11,random_state=42)\n",
    "#fitting the model \n",
    "rf_clf_sm2.fit(X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CV Results for `Decision Tree 2` model:\n",
      "            0.83209 ± 0.07959 accuracy\n",
      "            0.87893 ± 0.00000 precision\n",
      "        \n"
     ]
    }
   ],
   "source": [
    "rf_clf_sm2_model_results = mcalculation(\n",
    "                        model=rf_clf_sm2 ,\n",
    "                        model_name='Decision Tree 2',\n",
    "                        X=X_tr_smote, \n",
    "                        y=y_tr_smote\n",
    ");\n",
    "rf_clf_sm2_model_results.print_cv_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "evaluate_model_performance(rf_clf_sm2, X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8279907229188733"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_results2 = cross_val_score(rf_clf_sm2, X_tr_smote, y_tr_smote, cv=5)\n",
    "cv_results2.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best parameters found:  {'max_depth': 7, 'min_samples_leaf': 4, 'min_samples_split': 2}\n",
      "Best cross-validated accuracy: 0.82\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "\n",
    "param_grid = {\n",
    "    'max_depth': [3, 5, 7],\n",
    "    'min_samples_split': [2, 5, 10],\n",
    "    'min_samples_leaf': [1, 2, 4]\n",
    "\n",
    "}\n",
    "\n",
    "rf_model = DecisionTreeClassifier()\n",
    "\n",
    "grid_search = GridSearchCV(rf_model, param_grid, cv=5, scoring='accuracy')\n",
    "grid_search.fit(X_tr_smote, y_tr_smote)\n",
    "\n",
    "#Best parameters\n",
    "print(\"Best parameters found: \", grid_search.best_params_)\n",
    "\n",
    "#Best cross-validated score\n",
    "print(\"Best cross-validated accuracy: {:.2f}\".format(grid_search.best_score_))\n",
    "\n",
    "#Evaluate on the test set\n",
    "#y_pred = grid_search.predict(X_test_scaled)\n",
    "#accuracy = accuracy_score(y_test, y_pred)\n",
    "#print(\"Test set accuracy: {:.2f}\".format(accuracy))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ---- Decision Tree Model 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(max_depth=7, min_samples_leaf=4, min_samples_split=5,\n",
       "                       random_state=42)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#instantiation \n",
    "rf_clf_sm3 = DecisionTreeClassifier(max_depth=7,min_samples_leaf=4,min_samples_split=5,random_state=42)\n",
    "#fitting the model \n",
    "rf_clf_sm3.fit(X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CV Results for `Decision Tree 3` model:\n",
      "            0.82417 ± 0.07288 accuracy\n",
      "            0.86918 ± 0.00000 precision\n",
      "        \n"
     ]
    }
   ],
   "source": [
    "rf_clf_sm3_model_results = mcalculation(\n",
    "                        model=rf_clf_sm3 ,\n",
    "                        model_name='Decision Tree 3',\n",
    "                        X=X_tr_smote, \n",
    "                        y=y_tr_smote\n",
    ");\n",
    "rf_clf_sm3_model_results.print_cv_summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "evaluate_model_performance(rf_clf_sm3, X_tr_smote, y_tr_smote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8219784068456872"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cv_results3 = cross_val_score(rf_clf_sm3, X_tr_smote, y_tr_smote, cv=5)\n",
    "cv_results3.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model 1: \n",
      "CV Results for `Decision Tree` model:\n",
      "            0.79623 ± 0.09573 accuracy\n",
      "            0.79635 ± 0.00000 precision\n",
      "        \n",
      "cross validation2: 0.7892312410785269\n",
      "\n",
      "\n",
      "======================================\n",
      "Model 2: \n",
      "CV Results for `Decision Tree 2` model:\n",
      "            0.83209 ± 0.07959 accuracy\n",
      "            0.87893 ± 0.00000 precision\n",
      "        \n",
      "cross validation2: 0.8279907229188733\n",
      "\n",
      "\n",
      "======================================\n",
      "Model 3: \n",
      "CV Results for `Decision Tree 3` model:\n",
      "            0.82417 ± 0.07288 accuracy\n",
      "            0.86918 ± 0.00000 precision\n",
      "        \n",
      "cross validation3: 0.8219784068456872\n"
     ]
    }
   ],
   "source": [
    "print('Model 1: ')\n",
    "rf_clf_sm_model_results.print_cv_summary(), \n",
    "print('cross validation2:',cv_results.mean())\n",
    "print('\\n')\n",
    "print('======================================')\n",
    "print('Model 2: ')\n",
    "rf_clf_sm2_model_results.print_cv_summary()\n",
    "print('cross validation2:',cv_results2.mean())\n",
    "print('\\n')\n",
    "print('======================================')\n",
    "print('Model 3: ')\n",
    "rf_clf_sm3_model_results.print_cv_summary()\n",
    "print('cross validation3:',cv_results3.mean())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ----- Model 2 Evaluation on the test set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7007481296758105"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "precision_score(y_te_samp, rf_clf_sm2.predict(X_te_sc))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8078175895765473"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_te_samp, rf_clf_sm2.predict(X_te_sc))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "evaluate_model_performance( rf_clf_sm2, X_te_sc, y_te_samp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ConfusionMatrixDisplay(confusion_matrix(y_te_samp, rf_clf_sm2.predict(X_te_sc))).plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_importances= rf_clf_sm2.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[-0.49462582, -0.40131033, -0.49431659, ..., -0.06026364,\n",
       "         1.42026955, -0.556422  ],\n",
       "       [ 2.02173027, -0.40131033, -0.49431659, ..., -0.82232408,\n",
       "        -1.16387097, -0.556422  ],\n",
       "       [-0.49462582,  2.49183721, -0.49431659, ...,  1.46385723,\n",
       "         0.12819929, -0.556422  ],\n",
       "       ...,\n",
       "       [-0.49462582,  2.49183721, -0.49431659, ...,  1.46385723,\n",
       "         0.67116411,  2.75367887],\n",
       "       [-0.49462582, -0.40131033, -0.49431659, ..., -0.82232408,\n",
       "         0.82619795, -0.556422  ],\n",
       "       [-0.49462582, -0.40131033, -0.49431659, ..., -0.78397496,\n",
       "         0.06317853, -0.556422  ]])"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_tr_smote"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "#feature_importance_dict = dict(zip(X_tr_smote.columns, feature_importances))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'numpy.ndarray' object has no attribute 'corr'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-68-fbb939f28a7c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mX_tr_smote\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'numpy.ndarray' object has no attribute 'corr'"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age_group_18 - 34 Years</th>\n",
       "      <th>age_group_35 - 44 Years</th>\n",
       "      <th>age_group_45 - 54 Years</th>\n",
       "      <th>age_group_55 - 64 Years</th>\n",
       "      <th>age_group_65+ Years</th>\n",
       "      <th>race_Black</th>\n",
       "      <th>race_Hispanic</th>\n",
       "      <th>race_Other or Multiple</th>\n",
       "      <th>race_White</th>\n",
       "      <th>sex_Female</th>\n",
       "      <th>...</th>\n",
       "      <th>health_worker</th>\n",
       "      <th>health_insurance</th>\n",
       "      <th>opinion_h1n1_vacc_effective</th>\n",
       "      <th>opinion_h1n1_risk</th>\n",
       "      <th>opinion_h1n1_sick_from_vacc</th>\n",
       "      <th>opinion_seas_vacc_effective</th>\n",
       "      <th>opinion_seas_risk</th>\n",
       "      <th>opinion_seas_sick_from_vacc</th>\n",
       "      <th>household_adults</th>\n",
       "      <th>household_children</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>age_group_18 - 34 Years</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.197280</td>\n",
       "      <td>-0.244850</td>\n",
       "      <td>-0.258037</td>\n",
       "      <td>-0.290092</td>\n",
       "      <td>0.017819</td>\n",
       "      <td>0.129127</td>\n",
       "      <td>0.066571</td>\n",
       "      <td>-0.129231</td>\n",
       "      <td>-0.060616</td>\n",
       "      <td>...</td>\n",
       "      <td>0.025917</td>\n",
       "      <td>-0.183474</td>\n",
       "      <td>-0.013108</td>\n",
       "      <td>0.020768</td>\n",
       "      <td>0.016497</td>\n",
       "      <td>-0.074593</td>\n",
       "      <td>-0.025974</td>\n",
       "      <td>0.034388</td>\n",
       "      <td>0.195026</td>\n",
       "      <td>0.194887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_group_35 - 44 Years</th>\n",
       "      <td>-0.197280</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.197234</td>\n",
       "      <td>-0.207857</td>\n",
       "      <td>-0.233678</td>\n",
       "      <td>0.020794</td>\n",
       "      <td>0.051216</td>\n",
       "      <td>0.003794</td>\n",
       "      <td>-0.047220</td>\n",
       "      <td>-0.009780</td>\n",
       "      <td>...</td>\n",
       "      <td>0.024227</td>\n",
       "      <td>-0.036864</td>\n",
       "      <td>-0.005898</td>\n",
       "      <td>0.036261</td>\n",
       "      <td>0.032107</td>\n",
       "      <td>-0.053242</td>\n",
       "      <td>-0.008853</td>\n",
       "      <td>0.034629</td>\n",
       "      <td>0.028164</td>\n",
       "      <td>0.361452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_group_45 - 54 Years</th>\n",
       "      <td>-0.244850</td>\n",
       "      <td>-0.197234</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.257977</td>\n",
       "      <td>-0.290024</td>\n",
       "      <td>0.007566</td>\n",
       "      <td>-0.015944</td>\n",
       "      <td>0.008266</td>\n",
       "      <td>-0.000337</td>\n",
       "      <td>0.005708</td>\n",
       "      <td>...</td>\n",
       "      <td>0.032470</td>\n",
       "      <td>-0.016505</td>\n",
       "      <td>-0.001992</td>\n",
       "      <td>-0.001748</td>\n",
       "      <td>0.020267</td>\n",
       "      <td>-0.044469</td>\n",
       "      <td>-0.008999</td>\n",
       "      <td>0.011325</td>\n",
       "      <td>0.071002</td>\n",
       "      <td>0.040425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_group_55 - 64 Years</th>\n",
       "      <td>-0.258037</td>\n",
       "      <td>-0.207857</td>\n",
       "      <td>-0.257977</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.305644</td>\n",
       "      <td>-0.022945</td>\n",
       "      <td>-0.052315</td>\n",
       "      <td>-0.022342</td>\n",
       "      <td>0.060250</td>\n",
       "      <td>-0.001505</td>\n",
       "      <td>...</td>\n",
       "      <td>0.038912</td>\n",
       "      <td>0.032726</td>\n",
       "      <td>0.023255</td>\n",
       "      <td>0.004316</td>\n",
       "      <td>-0.003204</td>\n",
       "      <td>0.039557</td>\n",
       "      <td>0.025985</td>\n",
       "      <td>-0.004689</td>\n",
       "      <td>-0.041026</td>\n",
       "      <td>-0.218747</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_group_65+ Years</th>\n",
       "      <td>-0.290092</td>\n",
       "      <td>-0.233678</td>\n",
       "      <td>-0.290024</td>\n",
       "      <td>-0.305644</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.017964</td>\n",
       "      <td>-0.094354</td>\n",
       "      <td>-0.050186</td>\n",
       "      <td>0.098674</td>\n",
       "      <td>0.059157</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.108863</td>\n",
       "      <td>0.180528</td>\n",
       "      <td>-0.003443</td>\n",
       "      <td>-0.049976</td>\n",
       "      <td>-0.055800</td>\n",
       "      <td>0.113288</td>\n",
       "      <td>0.014428</td>\n",
       "      <td>-0.064548</td>\n",
       "      <td>-0.226045</td>\n",
       "      <td>-0.293839</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race_Black</th>\n",
       "      <td>0.017819</td>\n",
       "      <td>0.020794</td>\n",
       "      <td>0.007566</td>\n",
       "      <td>-0.022945</td>\n",
       "      <td>-0.017964</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.076230</td>\n",
       "      <td>-0.073950</td>\n",
       "      <td>-0.585538</td>\n",
       "      <td>0.020885</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.002871</td>\n",
       "      <td>-0.052913</td>\n",
       "      <td>-0.042774</td>\n",
       "      <td>-0.003961</td>\n",
       "      <td>0.065554</td>\n",
       "      <td>-0.057190</td>\n",
       "      <td>-0.042442</td>\n",
       "      <td>0.079974</td>\n",
       "      <td>-0.038686</td>\n",
       "      <td>0.028889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race_Hispanic</th>\n",
       "      <td>0.129127</td>\n",
       "      <td>0.051216</td>\n",
       "      <td>-0.015944</td>\n",
       "      <td>-0.052315</td>\n",
       "      <td>-0.094354</td>\n",
       "      <td>-0.076230</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.064990</td>\n",
       "      <td>-0.514591</td>\n",
       "      <td>-0.018055</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.028429</td>\n",
       "      <td>-0.180724</td>\n",
       "      <td>-0.012210</td>\n",
       "      <td>0.080983</td>\n",
       "      <td>0.089406</td>\n",
       "      <td>-0.015763</td>\n",
       "      <td>0.030088</td>\n",
       "      <td>0.106119</td>\n",
       "      <td>0.104358</td>\n",
       "      <td>0.136132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race_Other or Multiple</th>\n",
       "      <td>0.066571</td>\n",
       "      <td>0.003794</td>\n",
       "      <td>0.008266</td>\n",
       "      <td>-0.022342</td>\n",
       "      <td>-0.050186</td>\n",
       "      <td>-0.073950</td>\n",
       "      <td>-0.064990</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.499201</td>\n",
       "      <td>-0.029986</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013040</td>\n",
       "      <td>-0.025464</td>\n",
       "      <td>-0.016680</td>\n",
       "      <td>0.009129</td>\n",
       "      <td>0.038411</td>\n",
       "      <td>-0.029405</td>\n",
       "      <td>-0.005817</td>\n",
       "      <td>0.030036</td>\n",
       "      <td>0.046459</td>\n",
       "      <td>0.016037</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>race_White</th>\n",
       "      <td>-0.129231</td>\n",
       "      <td>-0.047220</td>\n",
       "      <td>-0.000337</td>\n",
       "      <td>0.060250</td>\n",
       "      <td>0.098674</td>\n",
       "      <td>-0.585538</td>\n",
       "      <td>-0.514591</td>\n",
       "      <td>-0.499201</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.014454</td>\n",
       "      <td>...</td>\n",
       "      <td>0.026791</td>\n",
       "      <td>0.159916</td>\n",
       "      <td>0.046070</td>\n",
       "      <td>-0.051635</td>\n",
       "      <td>-0.120885</td>\n",
       "      <td>0.065438</td>\n",
       "      <td>0.013894</td>\n",
       "      <td>-0.135792</td>\n",
       "      <td>-0.064282</td>\n",
       "      <td>-0.111204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex_Female</th>\n",
       "      <td>-0.060616</td>\n",
       "      <td>-0.009780</td>\n",
       "      <td>0.005708</td>\n",
       "      <td>-0.001505</td>\n",
       "      <td>0.059157</td>\n",
       "      <td>0.020885</td>\n",
       "      <td>-0.018055</td>\n",
       "      <td>-0.029986</td>\n",
       "      <td>0.014454</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.113346</td>\n",
       "      <td>0.063702</td>\n",
       "      <td>0.026500</td>\n",
       "      <td>0.088227</td>\n",
       "      <td>0.091361</td>\n",
       "      <td>0.056747</td>\n",
       "      <td>0.091311</td>\n",
       "      <td>0.042991</td>\n",
       "      <td>-0.063607</td>\n",
       "      <td>0.035745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sex_Male</th>\n",
       "      <td>0.060616</td>\n",
       "      <td>0.009780</td>\n",
       "      <td>-0.005708</td>\n",
       "      <td>0.001505</td>\n",
       "      <td>-0.059157</td>\n",
       "      <td>-0.020885</td>\n",
       "      <td>0.018055</td>\n",
       "      <td>0.029986</td>\n",
       "      <td>-0.014454</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.113346</td>\n",
       "      <td>-0.063702</td>\n",
       "      <td>-0.026500</td>\n",
       "      <td>-0.088227</td>\n",
       "      <td>-0.091361</td>\n",
       "      <td>-0.056747</td>\n",
       "      <td>-0.091311</td>\n",
       "      <td>-0.042991</td>\n",
       "      <td>0.063607</td>\n",
       "      <td>-0.035745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_atmpeygn</th>\n",
       "      <td>-0.003735</td>\n",
       "      <td>0.004951</td>\n",
       "      <td>-0.008553</td>\n",
       "      <td>-0.004205</td>\n",
       "      <td>0.011243</td>\n",
       "      <td>-0.037490</td>\n",
       "      <td>-0.032915</td>\n",
       "      <td>-0.035385</td>\n",
       "      <td>0.066021</td>\n",
       "      <td>0.004413</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005302</td>\n",
       "      <td>0.000378</td>\n",
       "      <td>-0.000613</td>\n",
       "      <td>0.002790</td>\n",
       "      <td>-0.025916</td>\n",
       "      <td>-0.014073</td>\n",
       "      <td>0.002003</td>\n",
       "      <td>-0.007668</td>\n",
       "      <td>-0.010571</td>\n",
       "      <td>0.007430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_bhuqouqj</th>\n",
       "      <td>-0.017061</td>\n",
       "      <td>-0.002868</td>\n",
       "      <td>0.021404</td>\n",
       "      <td>-0.005301</td>\n",
       "      <td>0.003288</td>\n",
       "      <td>-0.079911</td>\n",
       "      <td>-0.035362</td>\n",
       "      <td>-0.027188</td>\n",
       "      <td>0.091316</td>\n",
       "      <td>0.016397</td>\n",
       "      <td>...</td>\n",
       "      <td>0.027248</td>\n",
       "      <td>0.036255</td>\n",
       "      <td>0.049148</td>\n",
       "      <td>0.021233</td>\n",
       "      <td>-0.007789</td>\n",
       "      <td>0.031078</td>\n",
       "      <td>0.016434</td>\n",
       "      <td>-0.011747</td>\n",
       "      <td>0.021212</td>\n",
       "      <td>-0.007933</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_dqpwygqj</th>\n",
       "      <td>0.007614</td>\n",
       "      <td>0.013829</td>\n",
       "      <td>-0.009761</td>\n",
       "      <td>-0.005883</td>\n",
       "      <td>-0.003420</td>\n",
       "      <td>0.011382</td>\n",
       "      <td>0.039642</td>\n",
       "      <td>0.006824</td>\n",
       "      <td>-0.035655</td>\n",
       "      <td>-0.004135</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.009928</td>\n",
       "      <td>0.020448</td>\n",
       "      <td>-0.016528</td>\n",
       "      <td>-0.014836</td>\n",
       "      <td>0.013047</td>\n",
       "      <td>0.001184</td>\n",
       "      <td>-0.012173</td>\n",
       "      <td>0.020471</td>\n",
       "      <td>0.017664</td>\n",
       "      <td>0.008925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_fpwskwrf</th>\n",
       "      <td>-0.000851</td>\n",
       "      <td>0.009471</td>\n",
       "      <td>0.000936</td>\n",
       "      <td>-0.001189</td>\n",
       "      <td>-0.006428</td>\n",
       "      <td>0.116238</td>\n",
       "      <td>-0.037506</td>\n",
       "      <td>-0.020543</td>\n",
       "      <td>-0.043722</td>\n",
       "      <td>-0.000910</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.013520</td>\n",
       "      <td>0.033390</td>\n",
       "      <td>0.003099</td>\n",
       "      <td>-0.001045</td>\n",
       "      <td>-0.000967</td>\n",
       "      <td>0.004602</td>\n",
       "      <td>0.000396</td>\n",
       "      <td>-0.005078</td>\n",
       "      <td>-0.038046</td>\n",
       "      <td>-0.014966</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_kbazzjca</th>\n",
       "      <td>-0.013887</td>\n",
       "      <td>0.003631</td>\n",
       "      <td>-0.016248</td>\n",
       "      <td>-0.004255</td>\n",
       "      <td>0.028593</td>\n",
       "      <td>0.034671</td>\n",
       "      <td>0.090667</td>\n",
       "      <td>0.003374</td>\n",
       "      <td>-0.080182</td>\n",
       "      <td>0.027611</td>\n",
       "      <td>...</td>\n",
       "      <td>0.012411</td>\n",
       "      <td>-0.024309</td>\n",
       "      <td>-0.010055</td>\n",
       "      <td>0.010407</td>\n",
       "      <td>0.028655</td>\n",
       "      <td>0.011524</td>\n",
       "      <td>0.011738</td>\n",
       "      <td>0.028534</td>\n",
       "      <td>-0.031985</td>\n",
       "      <td>0.005133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_lrircsnp</th>\n",
       "      <td>0.010501</td>\n",
       "      <td>0.010118</td>\n",
       "      <td>0.010556</td>\n",
       "      <td>-0.000406</td>\n",
       "      <td>-0.026782</td>\n",
       "      <td>-0.063115</td>\n",
       "      <td>-0.019298</td>\n",
       "      <td>0.036338</td>\n",
       "      <td>0.032890</td>\n",
       "      <td>-0.017629</td>\n",
       "      <td>...</td>\n",
       "      <td>0.004283</td>\n",
       "      <td>-0.019349</td>\n",
       "      <td>-0.010382</td>\n",
       "      <td>-0.018105</td>\n",
       "      <td>-0.019697</td>\n",
       "      <td>-0.010866</td>\n",
       "      <td>-0.010140</td>\n",
       "      <td>-0.011162</td>\n",
       "      <td>0.013904</td>\n",
       "      <td>0.019981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_lzgpxyit</th>\n",
       "      <td>0.001913</td>\n",
       "      <td>-0.019399</td>\n",
       "      <td>0.007547</td>\n",
       "      <td>-0.001284</td>\n",
       "      <td>0.007883</td>\n",
       "      <td>0.139647</td>\n",
       "      <td>-0.037169</td>\n",
       "      <td>-0.036775</td>\n",
       "      <td>-0.050178</td>\n",
       "      <td>-0.014545</td>\n",
       "      <td>...</td>\n",
       "      <td>0.001107</td>\n",
       "      <td>-0.033382</td>\n",
       "      <td>-0.024291</td>\n",
       "      <td>-0.004872</td>\n",
       "      <td>0.014949</td>\n",
       "      <td>0.015740</td>\n",
       "      <td>-0.004729</td>\n",
       "      <td>0.010585</td>\n",
       "      <td>0.007993</td>\n",
       "      <td>-0.020902</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_mlyzmhmf</th>\n",
       "      <td>0.000847</td>\n",
       "      <td>0.003113</td>\n",
       "      <td>0.001563</td>\n",
       "      <td>-0.001877</td>\n",
       "      <td>-0.002886</td>\n",
       "      <td>-0.047093</td>\n",
       "      <td>0.129756</td>\n",
       "      <td>0.165505</td>\n",
       "      <td>-0.144001</td>\n",
       "      <td>-0.005483</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003061</td>\n",
       "      <td>-0.009474</td>\n",
       "      <td>0.004014</td>\n",
       "      <td>-0.007078</td>\n",
       "      <td>0.008547</td>\n",
       "      <td>-0.014513</td>\n",
       "      <td>-0.006185</td>\n",
       "      <td>0.012556</td>\n",
       "      <td>0.034123</td>\n",
       "      <td>0.003250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_oxchjgsf</th>\n",
       "      <td>0.019719</td>\n",
       "      <td>-0.003631</td>\n",
       "      <td>-0.009401</td>\n",
       "      <td>0.006084</td>\n",
       "      <td>-0.012257</td>\n",
       "      <td>-0.093658</td>\n",
       "      <td>-0.012859</td>\n",
       "      <td>-0.035792</td>\n",
       "      <td>0.092060</td>\n",
       "      <td>-0.010155</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010217</td>\n",
       "      <td>-0.016566</td>\n",
       "      <td>0.000779</td>\n",
       "      <td>0.002987</td>\n",
       "      <td>-0.019118</td>\n",
       "      <td>-0.025821</td>\n",
       "      <td>-0.007910</td>\n",
       "      <td>-0.022636</td>\n",
       "      <td>0.003029</td>\n",
       "      <td>0.015848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hhs_geo_region_qufhixun</th>\n",
       "      <td>-0.001753</td>\n",
       "      <td>-0.008566</td>\n",
       "      <td>-0.002265</td>\n",
       "      <td>0.015196</td>\n",
       "      <td>-0.003865</td>\n",
       "      <td>-0.028205</td>\n",
       "      <td>-0.056267</td>\n",
       "      <td>-0.030972</td>\n",
       "      <td>0.071268</td>\n",
       "      <td>0.003639</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005779</td>\n",
       "      <td>0.020210</td>\n",
       "      <td>0.002909</td>\n",
       "      <td>0.001920</td>\n",
       "      <td>0.004107</td>\n",
       "      <td>-0.005949</td>\n",
       "      <td>0.005574</td>\n",
       "      <td>-0.009966</td>\n",
       "      <td>-0.007060</td>\n",
       "      <td>-0.004535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>census_msa_MSA, Not Principle  City</th>\n",
       "      <td>-0.013874</td>\n",
       "      <td>0.017314</td>\n",
       "      <td>0.024606</td>\n",
       "      <td>-0.002613</td>\n",
       "      <td>-0.020972</td>\n",
       "      <td>-0.058843</td>\n",
       "      <td>-0.021891</td>\n",
       "      <td>0.003742</td>\n",
       "      <td>0.050753</td>\n",
       "      <td>-0.012832</td>\n",
       "      <td>...</td>\n",
       "      <td>0.010666</td>\n",
       "      <td>0.055717</td>\n",
       "      <td>0.013733</td>\n",
       "      <td>0.001340</td>\n",
       "      <td>0.002959</td>\n",
       "      <td>0.013295</td>\n",
       "      <td>0.012215</td>\n",
       "      <td>-0.010244</td>\n",
       "      <td>0.053792</td>\n",
       "      <td>0.045618</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>census_msa_MSA, Principle City</th>\n",
       "      <td>0.046522</td>\n",
       "      <td>0.015081</td>\n",
       "      <td>-0.020602</td>\n",
       "      <td>-0.012123</td>\n",
       "      <td>-0.024119</td>\n",
       "      <td>0.122182</td>\n",
       "      <td>0.075333</td>\n",
       "      <td>0.024017</td>\n",
       "      <td>-0.142141</td>\n",
       "      <td>-0.005941</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.008003</td>\n",
       "      <td>-0.008530</td>\n",
       "      <td>0.003050</td>\n",
       "      <td>0.002503</td>\n",
       "      <td>0.001302</td>\n",
       "      <td>-0.007658</td>\n",
       "      <td>-0.011720</td>\n",
       "      <td>0.015434</td>\n",
       "      <td>-0.039341</td>\n",
       "      <td>-0.021022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>census_msa_Non-MSA</th>\n",
       "      <td>-0.031994</td>\n",
       "      <td>-0.034647</td>\n",
       "      <td>-0.006379</td>\n",
       "      <td>0.015268</td>\n",
       "      <td>0.047934</td>\n",
       "      <td>-0.059091</td>\n",
       "      <td>-0.052448</td>\n",
       "      <td>-0.028653</td>\n",
       "      <td>0.088447</td>\n",
       "      <td>0.020339</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.003711</td>\n",
       "      <td>-0.053314</td>\n",
       "      <td>-0.018394</td>\n",
       "      <td>-0.004044</td>\n",
       "      <td>-0.004621</td>\n",
       "      <td>-0.006988</td>\n",
       "      <td>-0.001644</td>\n",
       "      <td>-0.004337</td>\n",
       "      <td>-0.019754</td>\n",
       "      <td>-0.029336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>respondent_id</th>\n",
       "      <td>-0.009712</td>\n",
       "      <td>0.004027</td>\n",
       "      <td>0.010393</td>\n",
       "      <td>0.000638</td>\n",
       "      <td>-0.004393</td>\n",
       "      <td>-0.003571</td>\n",
       "      <td>-0.000375</td>\n",
       "      <td>0.005186</td>\n",
       "      <td>-0.000414</td>\n",
       "      <td>-0.014161</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.005012</td>\n",
       "      <td>-0.015225</td>\n",
       "      <td>0.006223</td>\n",
       "      <td>-0.008168</td>\n",
       "      <td>-0.000891</td>\n",
       "      <td>0.006177</td>\n",
       "      <td>-0.005187</td>\n",
       "      <td>0.013406</td>\n",
       "      <td>0.000212</td>\n",
       "      <td>-0.005380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h1n1_concern</th>\n",
       "      <td>-0.095867</td>\n",
       "      <td>0.009718</td>\n",
       "      <td>0.031468</td>\n",
       "      <td>0.035721</td>\n",
       "      <td>0.017456</td>\n",
       "      <td>0.118134</td>\n",
       "      <td>0.060890</td>\n",
       "      <td>0.038306</td>\n",
       "      <td>-0.139089</td>\n",
       "      <td>0.139559</td>\n",
       "      <td>...</td>\n",
       "      <td>0.024618</td>\n",
       "      <td>-0.004034</td>\n",
       "      <td>0.263004</td>\n",
       "      <td>0.364086</td>\n",
       "      <td>0.334119</td>\n",
       "      <td>0.225937</td>\n",
       "      <td>0.331046</td>\n",
       "      <td>0.229496</td>\n",
       "      <td>-0.022742</td>\n",
       "      <td>0.042480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>h1n1_knowledge</th>\n",
       "      <td>-0.042183</td>\n",
       "      <td>0.046594</td>\n",
       "      <td>0.065725</td>\n",
       "      <td>0.077877</td>\n",
       "      <td>-0.131358</td>\n",
       "      <td>-0.133889</td>\n",
       "      <td>-0.075800</td>\n",
       "      <td>-0.020938</td>\n",
       "      <td>0.148516</td>\n",
       "      <td>0.082207</td>\n",
       "      <td>...</td>\n",
       "      <td>0.183619</td>\n",
       "      <td>0.119497</td>\n",
       "      <td>0.123306</td>\n",
       "      <td>0.076266</td>\n",
       "      <td>-0.027342</td>\n",
       "      <td>0.082054</td>\n",
       "      <td>0.087969</td>\n",
       "      <td>-0.067090</td>\n",
       "      <td>0.019922</td>\n",
       "      <td>0.057424</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_antiviral_meds</th>\n",
       "      <td>0.072624</td>\n",
       "      <td>0.040029</td>\n",
       "      <td>-0.003460</td>\n",
       "      <td>-0.040557</td>\n",
       "      <td>-0.056471</td>\n",
       "      <td>0.057402</td>\n",
       "      <td>0.125573</td>\n",
       "      <td>0.021058</td>\n",
       "      <td>-0.127026</td>\n",
       "      <td>0.013237</td>\n",
       "      <td>...</td>\n",
       "      <td>0.006903</td>\n",
       "      <td>-0.061476</td>\n",
       "      <td>0.020690</td>\n",
       "      <td>0.110015</td>\n",
       "      <td>0.088855</td>\n",
       "      <td>0.014420</td>\n",
       "      <td>0.085132</td>\n",
       "      <td>0.090346</td>\n",
       "      <td>0.040994</td>\n",
       "      <td>0.077282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_avoidance</th>\n",
       "      <td>-0.023258</td>\n",
       "      <td>-0.000480</td>\n",
       "      <td>0.024192</td>\n",
       "      <td>0.018798</td>\n",
       "      <td>-0.018133</td>\n",
       "      <td>0.017918</td>\n",
       "      <td>0.002096</td>\n",
       "      <td>0.002912</td>\n",
       "      <td>-0.015076</td>\n",
       "      <td>0.124589</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.000652</td>\n",
       "      <td>0.034413</td>\n",
       "      <td>0.112887</td>\n",
       "      <td>0.125075</td>\n",
       "      <td>0.144693</td>\n",
       "      <td>0.111536</td>\n",
       "      <td>0.137673</td>\n",
       "      <td>0.100983</td>\n",
       "      <td>0.011758</td>\n",
       "      <td>0.031677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_face_mask</th>\n",
       "      <td>-0.011041</td>\n",
       "      <td>-0.007533</td>\n",
       "      <td>0.013346</td>\n",
       "      <td>0.008777</td>\n",
       "      <td>-0.004406</td>\n",
       "      <td>0.035878</td>\n",
       "      <td>0.088121</td>\n",
       "      <td>0.041130</td>\n",
       "      <td>-0.101674</td>\n",
       "      <td>0.057966</td>\n",
       "      <td>...</td>\n",
       "      <td>0.065762</td>\n",
       "      <td>-0.043667</td>\n",
       "      <td>0.039169</td>\n",
       "      <td>0.134931</td>\n",
       "      <td>0.109115</td>\n",
       "      <td>0.040966</td>\n",
       "      <td>0.109869</td>\n",
       "      <td>0.099567</td>\n",
       "      <td>0.029713</td>\n",
       "      <td>-0.003627</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_wash_hands</th>\n",
       "      <td>-0.048878</td>\n",
       "      <td>0.013418</td>\n",
       "      <td>0.030500</td>\n",
       "      <td>0.018502</td>\n",
       "      <td>-0.011216</td>\n",
       "      <td>0.066675</td>\n",
       "      <td>0.034150</td>\n",
       "      <td>0.007024</td>\n",
       "      <td>-0.069783</td>\n",
       "      <td>0.172405</td>\n",
       "      <td>...</td>\n",
       "      <td>0.056529</td>\n",
       "      <td>0.036401</td>\n",
       "      <td>0.135257</td>\n",
       "      <td>0.166735</td>\n",
       "      <td>0.147016</td>\n",
       "      <td>0.130047</td>\n",
       "      <td>0.175862</td>\n",
       "      <td>0.091476</td>\n",
       "      <td>0.005471</td>\n",
       "      <td>0.042604</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_large_gatherings</th>\n",
       "      <td>-0.065975</td>\n",
       "      <td>-0.021725</td>\n",
       "      <td>-0.027209</td>\n",
       "      <td>0.013125</td>\n",
       "      <td>0.089700</td>\n",
       "      <td>0.078971</td>\n",
       "      <td>0.072934</td>\n",
       "      <td>0.050886</td>\n",
       "      <td>-0.127329</td>\n",
       "      <td>0.063934</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.036726</td>\n",
       "      <td>-0.056624</td>\n",
       "      <td>0.060410</td>\n",
       "      <td>0.126622</td>\n",
       "      <td>0.182794</td>\n",
       "      <td>0.077251</td>\n",
       "      <td>0.123392</td>\n",
       "      <td>0.137375</td>\n",
       "      <td>-0.034181</td>\n",
       "      <td>-0.013623</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_outside_home</th>\n",
       "      <td>-0.060319</td>\n",
       "      <td>-0.024167</td>\n",
       "      <td>-0.026221</td>\n",
       "      <td>0.009603</td>\n",
       "      <td>0.088881</td>\n",
       "      <td>0.101071</td>\n",
       "      <td>0.062685</td>\n",
       "      <td>0.039476</td>\n",
       "      <td>-0.129343</td>\n",
       "      <td>0.049293</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.034437</td>\n",
       "      <td>-0.057135</td>\n",
       "      <td>0.057386</td>\n",
       "      <td>0.119412</td>\n",
       "      <td>0.164986</td>\n",
       "      <td>0.065973</td>\n",
       "      <td>0.114285</td>\n",
       "      <td>0.140509</td>\n",
       "      <td>-0.027924</td>\n",
       "      <td>-0.019263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>behavioral_touch_face</th>\n",
       "      <td>-0.069674</td>\n",
       "      <td>0.005754</td>\n",
       "      <td>0.010824</td>\n",
       "      <td>0.031790</td>\n",
       "      <td>0.019215</td>\n",
       "      <td>0.058807</td>\n",
       "      <td>0.014875</td>\n",
       "      <td>0.001801</td>\n",
       "      <td>-0.049750</td>\n",
       "      <td>0.178828</td>\n",
       "      <td>...</td>\n",
       "      <td>0.067317</td>\n",
       "      <td>0.011358</td>\n",
       "      <td>0.100454</td>\n",
       "      <td>0.154463</td>\n",
       "      <td>0.135543</td>\n",
       "      <td>0.096022</td>\n",
       "      <td>0.141229</td>\n",
       "      <td>0.099952</td>\n",
       "      <td>-0.002797</td>\n",
       "      <td>0.016009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>doctor_recc_h1n1</th>\n",
       "      <td>-0.016398</td>\n",
       "      <td>-0.012893</td>\n",
       "      <td>-0.032295</td>\n",
       "      <td>0.023678</td>\n",
       "      <td>0.032279</td>\n",
       "      <td>-0.002733</td>\n",
       "      <td>-0.002624</td>\n",
       "      <td>0.000628</td>\n",
       "      <td>0.003062</td>\n",
       "      <td>0.041240</td>\n",
       "      <td>...</td>\n",
       "      <td>0.075009</td>\n",
       "      <td>0.066347</td>\n",
       "      <td>0.171116</td>\n",
       "      <td>0.272662</td>\n",
       "      <td>0.112170</td>\n",
       "      <td>0.111816</td>\n",
       "      <td>0.209005</td>\n",
       "      <td>0.056939</td>\n",
       "      <td>0.003449</td>\n",
       "      <td>0.009442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>doctor_recc_seasonal</th>\n",
       "      <td>-0.106450</td>\n",
       "      <td>-0.057744</td>\n",
       "      <td>-0.059761</td>\n",
       "      <td>0.039884</td>\n",
       "      <td>0.159490</td>\n",
       "      <td>0.001091</td>\n",
       "      <td>-0.040576</td>\n",
       "      <td>0.000677</td>\n",
       "      <td>0.023385</td>\n",
       "      <td>0.079217</td>\n",
       "      <td>...</td>\n",
       "      <td>0.038641</td>\n",
       "      <td>0.116069</td>\n",
       "      <td>0.130761</td>\n",
       "      <td>0.176148</td>\n",
       "      <td>0.069468</td>\n",
       "      <td>0.189447</td>\n",
       "      <td>0.247406</td>\n",
       "      <td>0.028052</td>\n",
       "      <td>-0.036989</td>\n",
       "      <td>-0.054183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>chronic_med_condition</th>\n",
       "      <td>-0.139935</td>\n",
       "      <td>-0.082565</td>\n",
       "      <td>-0.017334</td>\n",
       "      <td>0.051199</td>\n",
       "      <td>0.160285</td>\n",
       "      <td>0.020728</td>\n",
       "      <td>-0.038442</td>\n",
       "      <td>-0.014138</td>\n",
       "      <td>0.017555</td>\n",
       "      <td>0.053307</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.017940</td>\n",
       "      <td>0.067210</td>\n",
       "      <td>0.051357</td>\n",
       "      <td>0.116675</td>\n",
       "      <td>0.071154</td>\n",
       "      <td>0.096033</td>\n",
       "      <td>0.153101</td>\n",
       "      <td>0.048277</td>\n",
       "      <td>-0.069621</td>\n",
       "      <td>-0.099440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>child_under_6_months</th>\n",
       "      <td>0.082460</td>\n",
       "      <td>0.005070</td>\n",
       "      <td>-0.012900</td>\n",
       "      <td>-0.002448</td>\n",
       "      <td>-0.065080</td>\n",
       "      <td>0.017356</td>\n",
       "      <td>0.042507</td>\n",
       "      <td>-0.017342</td>\n",
       "      <td>-0.027200</td>\n",
       "      <td>0.038415</td>\n",
       "      <td>...</td>\n",
       "      <td>0.062090</td>\n",
       "      <td>-0.023838</td>\n",
       "      <td>0.005983</td>\n",
       "      <td>0.074857</td>\n",
       "      <td>0.041533</td>\n",
       "      <td>0.006128</td>\n",
       "      <td>0.042765</td>\n",
       "      <td>0.028548</td>\n",
       "      <td>0.045331</td>\n",
       "      <td>0.092393</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>health_worker</th>\n",
       "      <td>0.025917</td>\n",
       "      <td>0.024227</td>\n",
       "      <td>0.032470</td>\n",
       "      <td>0.038912</td>\n",
       "      <td>-0.108863</td>\n",
       "      <td>-0.002871</td>\n",
       "      <td>-0.028429</td>\n",
       "      <td>-0.013040</td>\n",
       "      <td>0.026791</td>\n",
       "      <td>0.113346</td>\n",
       "      <td>...</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.044771</td>\n",
       "      <td>0.059135</td>\n",
       "      <td>0.120359</td>\n",
       "      <td>0.007505</td>\n",
       "      <td>0.028175</td>\n",
       "      <td>0.097554</td>\n",
       "      <td>-0.018806</td>\n",
       "      <td>0.017946</td>\n",
       "      <td>0.027164</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>health_insurance</th>\n",
       "      <td>-0.183474</td>\n",
       "      <td>-0.036864</td>\n",
       "      <td>-0.016505</td>\n",
       "      <td>0.032726</td>\n",
       "      <td>0.180528</td>\n",
       "      <td>-0.052913</td>\n",
       "      <td>-0.180724</td>\n",
       "      <td>-0.025464</td>\n",
       "      <td>0.159916</td>\n",
       "      <td>0.063702</td>\n",
       "      <td>...</td>\n",
       "      <td>0.044771</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.058441</td>\n",
       "      <td>0.009248</td>\n",
       "      <td>-0.036063</td>\n",
       "      <td>0.090015</td>\n",
       "      <td>0.050781</td>\n",
       "      <td>-0.065473</td>\n",
       "      <td>-0.078371</td>\n",
       "      <td>-0.070486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_h1n1_vacc_effective</th>\n",
       "      <td>-0.013108</td>\n",
       "      <td>-0.005898</td>\n",
       "      <td>-0.001992</td>\n",
       "      <td>0.023255</td>\n",
       "      <td>-0.003443</td>\n",
       "      <td>-0.042774</td>\n",
       "      <td>-0.012210</td>\n",
       "      <td>-0.016680</td>\n",
       "      <td>0.046070</td>\n",
       "      <td>0.026500</td>\n",
       "      <td>...</td>\n",
       "      <td>0.059135</td>\n",
       "      <td>0.058441</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.309996</td>\n",
       "      <td>0.070962</td>\n",
       "      <td>0.492217</td>\n",
       "      <td>0.284546</td>\n",
       "      <td>0.014797</td>\n",
       "      <td>0.008088</td>\n",
       "      <td>-0.008617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_h1n1_risk</th>\n",
       "      <td>0.020768</td>\n",
       "      <td>0.036261</td>\n",
       "      <td>-0.001748</td>\n",
       "      <td>0.004316</td>\n",
       "      <td>-0.049976</td>\n",
       "      <td>-0.003961</td>\n",
       "      <td>0.080983</td>\n",
       "      <td>0.009129</td>\n",
       "      <td>-0.051635</td>\n",
       "      <td>0.088227</td>\n",
       "      <td>...</td>\n",
       "      <td>0.120359</td>\n",
       "      <td>0.009248</td>\n",
       "      <td>0.309996</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.316171</td>\n",
       "      <td>0.237262</td>\n",
       "      <td>0.576598</td>\n",
       "      <td>0.191251</td>\n",
       "      <td>0.025438</td>\n",
       "      <td>0.070820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_h1n1_sick_from_vacc</th>\n",
       "      <td>0.016497</td>\n",
       "      <td>0.032107</td>\n",
       "      <td>0.020267</td>\n",
       "      <td>-0.003204</td>\n",
       "      <td>-0.055800</td>\n",
       "      <td>0.065554</td>\n",
       "      <td>0.089406</td>\n",
       "      <td>0.038411</td>\n",
       "      <td>-0.120885</td>\n",
       "      <td>0.091361</td>\n",
       "      <td>...</td>\n",
       "      <td>0.007505</td>\n",
       "      <td>-0.036063</td>\n",
       "      <td>0.070962</td>\n",
       "      <td>0.316171</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.071803</td>\n",
       "      <td>0.247418</td>\n",
       "      <td>0.506703</td>\n",
       "      <td>0.011168</td>\n",
       "      <td>0.062152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_seas_vacc_effective</th>\n",
       "      <td>-0.074593</td>\n",
       "      <td>-0.053242</td>\n",
       "      <td>-0.044469</td>\n",
       "      <td>0.039557</td>\n",
       "      <td>0.113288</td>\n",
       "      <td>-0.057190</td>\n",
       "      <td>-0.015763</td>\n",
       "      <td>-0.029405</td>\n",
       "      <td>0.065438</td>\n",
       "      <td>0.056747</td>\n",
       "      <td>...</td>\n",
       "      <td>0.028175</td>\n",
       "      <td>0.090015</td>\n",
       "      <td>0.492217</td>\n",
       "      <td>0.237262</td>\n",
       "      <td>0.071803</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.356482</td>\n",
       "      <td>-0.012330</td>\n",
       "      <td>-0.023614</td>\n",
       "      <td>-0.071924</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_seas_risk</th>\n",
       "      <td>-0.025974</td>\n",
       "      <td>-0.008853</td>\n",
       "      <td>-0.008999</td>\n",
       "      <td>0.025985</td>\n",
       "      <td>0.014428</td>\n",
       "      <td>-0.042442</td>\n",
       "      <td>0.030088</td>\n",
       "      <td>-0.005817</td>\n",
       "      <td>0.013894</td>\n",
       "      <td>0.091311</td>\n",
       "      <td>...</td>\n",
       "      <td>0.097554</td>\n",
       "      <td>0.050781</td>\n",
       "      <td>0.284546</td>\n",
       "      <td>0.576598</td>\n",
       "      <td>0.247418</td>\n",
       "      <td>0.356482</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.189387</td>\n",
       "      <td>0.004907</td>\n",
       "      <td>0.018464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>opinion_seas_sick_from_vacc</th>\n",
       "      <td>0.034388</td>\n",
       "      <td>0.034629</td>\n",
       "      <td>0.011325</td>\n",
       "      <td>-0.004689</td>\n",
       "      <td>-0.064548</td>\n",
       "      <td>0.079974</td>\n",
       "      <td>0.106119</td>\n",
       "      <td>0.030036</td>\n",
       "      <td>-0.135792</td>\n",
       "      <td>0.042991</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.018806</td>\n",
       "      <td>-0.065473</td>\n",
       "      <td>0.014797</td>\n",
       "      <td>0.191251</td>\n",
       "      <td>0.506703</td>\n",
       "      <td>-0.012330</td>\n",
       "      <td>0.189387</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.033365</td>\n",
       "      <td>0.045259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>household_adults</th>\n",
       "      <td>0.195026</td>\n",
       "      <td>0.028164</td>\n",
       "      <td>0.071002</td>\n",
       "      <td>-0.041026</td>\n",
       "      <td>-0.226045</td>\n",
       "      <td>-0.038686</td>\n",
       "      <td>0.104358</td>\n",
       "      <td>0.046459</td>\n",
       "      <td>-0.064282</td>\n",
       "      <td>-0.063607</td>\n",
       "      <td>...</td>\n",
       "      <td>0.017946</td>\n",
       "      <td>-0.078371</td>\n",
       "      <td>0.008088</td>\n",
       "      <td>0.025438</td>\n",
       "      <td>0.011168</td>\n",
       "      <td>-0.023614</td>\n",
       "      <td>0.004907</td>\n",
       "      <td>0.033365</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.167123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>household_children</th>\n",
       "      <td>0.194887</td>\n",
       "      <td>0.361452</td>\n",
       "      <td>0.040425</td>\n",
       "      <td>-0.218747</td>\n",
       "      <td>-0.293839</td>\n",
       "      <td>0.028889</td>\n",
       "      <td>0.136132</td>\n",
       "      <td>0.016037</td>\n",
       "      <td>-0.111204</td>\n",
       "      <td>0.035745</td>\n",
       "      <td>...</td>\n",
       "      <td>0.027164</td>\n",
       "      <td>-0.070486</td>\n",
       "      <td>-0.008617</td>\n",
       "      <td>0.070820</td>\n",
       "      <td>0.062152</td>\n",
       "      <td>-0.071924</td>\n",
       "      <td>0.018464</td>\n",
       "      <td>0.045259</td>\n",
       "      <td>0.167123</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>48 rows × 48 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     age_group_18 - 34 Years  \\\n",
       "age_group_18 - 34 Years                             1.000000   \n",
       "age_group_35 - 44 Years                            -0.197280   \n",
       "age_group_45 - 54 Years                            -0.244850   \n",
       "age_group_55 - 64 Years                            -0.258037   \n",
       "age_group_65+ Years                                -0.290092   \n",
       "race_Black                                          0.017819   \n",
       "race_Hispanic                                       0.129127   \n",
       "race_Other or Multiple                              0.066571   \n",
       "race_White                                         -0.129231   \n",
       "sex_Female                                         -0.060616   \n",
       "sex_Male                                            0.060616   \n",
       "hhs_geo_region_atmpeygn                            -0.003735   \n",
       "hhs_geo_region_bhuqouqj                            -0.017061   \n",
       "hhs_geo_region_dqpwygqj                             0.007614   \n",
       "hhs_geo_region_fpwskwrf                            -0.000851   \n",
       "hhs_geo_region_kbazzjca                            -0.013887   \n",
       "hhs_geo_region_lrircsnp                             0.010501   \n",
       "hhs_geo_region_lzgpxyit                             0.001913   \n",
       "hhs_geo_region_mlyzmhmf                             0.000847   \n",
       "hhs_geo_region_oxchjgsf                             0.019719   \n",
       "hhs_geo_region_qufhixun                            -0.001753   \n",
       "census_msa_MSA, Not Principle  City                -0.013874   \n",
       "census_msa_MSA, Principle City                      0.046522   \n",
       "census_msa_Non-MSA                                 -0.031994   \n",
       "respondent_id                                      -0.009712   \n",
       "h1n1_concern                                       -0.095867   \n",
       "h1n1_knowledge                                     -0.042183   \n",
       "behavioral_antiviral_meds                           0.072624   \n",
       "behavioral_avoidance                               -0.023258   \n",
       "behavioral_face_mask                               -0.011041   \n",
       "behavioral_wash_hands                              -0.048878   \n",
       "behavioral_large_gatherings                        -0.065975   \n",
       "behavioral_outside_home                            -0.060319   \n",
       "behavioral_touch_face                              -0.069674   \n",
       "doctor_recc_h1n1                                   -0.016398   \n",
       "doctor_recc_seasonal                               -0.106450   \n",
       "chronic_med_condition                              -0.139935   \n",
       "child_under_6_months                                0.082460   \n",
       "health_worker                                       0.025917   \n",
       "health_insurance                                   -0.183474   \n",
       "opinion_h1n1_vacc_effective                        -0.013108   \n",
       "opinion_h1n1_risk                                   0.020768   \n",
       "opinion_h1n1_sick_from_vacc                         0.016497   \n",
       "opinion_seas_vacc_effective                        -0.074593   \n",
       "opinion_seas_risk                                  -0.025974   \n",
       "opinion_seas_sick_from_vacc                         0.034388   \n",
       "household_adults                                    0.195026   \n",
       "household_children                                  0.194887   \n",
       "\n",
       "                                     age_group_35 - 44 Years  \\\n",
       "age_group_18 - 34 Years                            -0.197280   \n",
       "age_group_35 - 44 Years                             1.000000   \n",
       "age_group_45 - 54 Years                            -0.197234   \n",
       "age_group_55 - 64 Years                            -0.207857   \n",
       "age_group_65+ Years                                -0.233678   \n",
       "race_Black                                          0.020794   \n",
       "race_Hispanic                                       0.051216   \n",
       "race_Other or Multiple                              0.003794   \n",
       "race_White                                         -0.047220   \n",
       "sex_Female                                         -0.009780   \n",
       "sex_Male                                            0.009780   \n",
       "hhs_geo_region_atmpeygn                             0.004951   \n",
       "hhs_geo_region_bhuqouqj                            -0.002868   \n",
       "hhs_geo_region_dqpwygqj                             0.013829   \n",
       "hhs_geo_region_fpwskwrf                             0.009471   \n",
       "hhs_geo_region_kbazzjca                             0.003631   \n",
       "hhs_geo_region_lrircsnp                             0.010118   \n",
       "hhs_geo_region_lzgpxyit                            -0.019399   \n",
       "hhs_geo_region_mlyzmhmf                             0.003113   \n",
       "hhs_geo_region_oxchjgsf                            -0.003631   \n",
       "hhs_geo_region_qufhixun                            -0.008566   \n",
       "census_msa_MSA, Not Principle  City                 0.017314   \n",
       "census_msa_MSA, Principle City                      0.015081   \n",
       "census_msa_Non-MSA                                 -0.034647   \n",
       "respondent_id                                       0.004027   \n",
       "h1n1_concern                                        0.009718   \n",
       "h1n1_knowledge                                      0.046594   \n",
       "behavioral_antiviral_meds                           0.040029   \n",
       "behavioral_avoidance                               -0.000480   \n",
       "behavioral_face_mask                               -0.007533   \n",
       "behavioral_wash_hands                               0.013418   \n",
       "behavioral_large_gatherings                        -0.021725   \n",
       "behavioral_outside_home                            -0.024167   \n",
       "behavioral_touch_face                               0.005754   \n",
       "doctor_recc_h1n1                                   -0.012893   \n",
       "doctor_recc_seasonal                               -0.057744   \n",
       "chronic_med_condition                              -0.082565   \n",
       "child_under_6_months                                0.005070   \n",
       "health_worker                                       0.024227   \n",
       "health_insurance                                   -0.036864   \n",
       "opinion_h1n1_vacc_effective                        -0.005898   \n",
       "opinion_h1n1_risk                                   0.036261   \n",
       "opinion_h1n1_sick_from_vacc                         0.032107   \n",
       "opinion_seas_vacc_effective                        -0.053242   \n",
       "opinion_seas_risk                                  -0.008853   \n",
       "opinion_seas_sick_from_vacc                         0.034629   \n",
       "household_adults                                    0.028164   \n",
       "household_children                                  0.361452   \n",
       "\n",
       "                                     age_group_45 - 54 Years  \\\n",
       "age_group_18 - 34 Years                            -0.244850   \n",
       "age_group_35 - 44 Years                            -0.197234   \n",
       "age_group_45 - 54 Years                             1.000000   \n",
       "age_group_55 - 64 Years                            -0.257977   \n",
       "age_group_65+ Years                                -0.290024   \n",
       "race_Black                                          0.007566   \n",
       "race_Hispanic                                      -0.015944   \n",
       "race_Other or Multiple                              0.008266   \n",
       "race_White                                         -0.000337   \n",
       "sex_Female                                          0.005708   \n",
       "sex_Male                                           -0.005708   \n",
       "hhs_geo_region_atmpeygn                            -0.008553   \n",
       "hhs_geo_region_bhuqouqj                             0.021404   \n",
       "hhs_geo_region_dqpwygqj                            -0.009761   \n",
       "hhs_geo_region_fpwskwrf                             0.000936   \n",
       "hhs_geo_region_kbazzjca                            -0.016248   \n",
       "hhs_geo_region_lrircsnp                             0.010556   \n",
       "hhs_geo_region_lzgpxyit                             0.007547   \n",
       "hhs_geo_region_mlyzmhmf                             0.001563   \n",
       "hhs_geo_region_oxchjgsf                            -0.009401   \n",
       "hhs_geo_region_qufhixun                            -0.002265   \n",
       "census_msa_MSA, Not Principle  City                 0.024606   \n",
       "census_msa_MSA, Principle City                     -0.020602   \n",
       "census_msa_Non-MSA                                 -0.006379   \n",
       "respondent_id                                       0.010393   \n",
       "h1n1_concern                                        0.031468   \n",
       "h1n1_knowledge                                      0.065725   \n",
       "behavioral_antiviral_meds                          -0.003460   \n",
       "behavioral_avoidance                                0.024192   \n",
       "behavioral_face_mask                                0.013346   \n",
       "behavioral_wash_hands                               0.030500   \n",
       "behavioral_large_gatherings                        -0.027209   \n",
       "behavioral_outside_home                            -0.026221   \n",
       "behavioral_touch_face                               0.010824   \n",
       "doctor_recc_h1n1                                   -0.032295   \n",
       "doctor_recc_seasonal                               -0.059761   \n",
       "chronic_med_condition                              -0.017334   \n",
       "child_under_6_months                               -0.012900   \n",
       "health_worker                                       0.032470   \n",
       "health_insurance                                   -0.016505   \n",
       "opinion_h1n1_vacc_effective                        -0.001992   \n",
       "opinion_h1n1_risk                                  -0.001748   \n",
       "opinion_h1n1_sick_from_vacc                         0.020267   \n",
       "opinion_seas_vacc_effective                        -0.044469   \n",
       "opinion_seas_risk                                  -0.008999   \n",
       "opinion_seas_sick_from_vacc                         0.011325   \n",
       "household_adults                                    0.071002   \n",
       "household_children                                  0.040425   \n",
       "\n",
       "                                     age_group_55 - 64 Years  \\\n",
       "age_group_18 - 34 Years                            -0.258037   \n",
       "age_group_35 - 44 Years                            -0.207857   \n",
       "age_group_45 - 54 Years                            -0.257977   \n",
       "age_group_55 - 64 Years                             1.000000   \n",
       "age_group_65+ Years                                -0.305644   \n",
       "race_Black                                         -0.022945   \n",
       "race_Hispanic                                      -0.052315   \n",
       "race_Other or Multiple                             -0.022342   \n",
       "race_White                                          0.060250   \n",
       "sex_Female                                         -0.001505   \n",
       "sex_Male                                            0.001505   \n",
       "hhs_geo_region_atmpeygn                            -0.004205   \n",
       "hhs_geo_region_bhuqouqj                            -0.005301   \n",
       "hhs_geo_region_dqpwygqj                            -0.005883   \n",
       "hhs_geo_region_fpwskwrf                            -0.001189   \n",
       "hhs_geo_region_kbazzjca                            -0.004255   \n",
       "hhs_geo_region_lrircsnp                            -0.000406   \n",
       "hhs_geo_region_lzgpxyit                            -0.001284   \n",
       "hhs_geo_region_mlyzmhmf                            -0.001877   \n",
       "hhs_geo_region_oxchjgsf                             0.006084   \n",
       "hhs_geo_region_qufhixun                             0.015196   \n",
       "census_msa_MSA, Not Principle  City                -0.002613   \n",
       "census_msa_MSA, Principle City                     -0.012123   \n",
       "census_msa_Non-MSA                                  0.015268   \n",
       "respondent_id                                       0.000638   \n",
       "h1n1_concern                                        0.035721   \n",
       "h1n1_knowledge                                      0.077877   \n",
       "behavioral_antiviral_meds                          -0.040557   \n",
       "behavioral_avoidance                                0.018798   \n",
       "behavioral_face_mask                                0.008777   \n",
       "behavioral_wash_hands                               0.018502   \n",
       "behavioral_large_gatherings                         0.013125   \n",
       "behavioral_outside_home                             0.009603   \n",
       "behavioral_touch_face                               0.031790   \n",
       "doctor_recc_h1n1                                    0.023678   \n",
       "doctor_recc_seasonal                                0.039884   \n",
       "chronic_med_condition                               0.051199   \n",
       "child_under_6_months                               -0.002448   \n",
       "health_worker                                       0.038912   \n",
       "health_insurance                                    0.032726   \n",
       "opinion_h1n1_vacc_effective                         0.023255   \n",
       "opinion_h1n1_risk                                   0.004316   \n",
       "opinion_h1n1_sick_from_vacc                        -0.003204   \n",
       "opinion_seas_vacc_effective                         0.039557   \n",
       "opinion_seas_risk                                   0.025985   \n",
       "opinion_seas_sick_from_vacc                        -0.004689   \n",
       "household_adults                                   -0.041026   \n",
       "household_children                                 -0.218747   \n",
       "\n",
       "                                     age_group_65+ Years  race_Black  \\\n",
       "age_group_18 - 34 Years                        -0.290092    0.017819   \n",
       "age_group_35 - 44 Years                        -0.233678    0.020794   \n",
       "age_group_45 - 54 Years                        -0.290024    0.007566   \n",
       "age_group_55 - 64 Years                        -0.305644   -0.022945   \n",
       "age_group_65+ Years                             1.000000   -0.017964   \n",
       "race_Black                                     -0.017964    1.000000   \n",
       "race_Hispanic                                  -0.094354   -0.076230   \n",
       "race_Other or Multiple                         -0.050186   -0.073950   \n",
       "race_White                                      0.098674   -0.585538   \n",
       "sex_Female                                      0.059157    0.020885   \n",
       "sex_Male                                       -0.059157   -0.020885   \n",
       "hhs_geo_region_atmpeygn                         0.011243   -0.037490   \n",
       "hhs_geo_region_bhuqouqj                         0.003288   -0.079911   \n",
       "hhs_geo_region_dqpwygqj                        -0.003420    0.011382   \n",
       "hhs_geo_region_fpwskwrf                        -0.006428    0.116238   \n",
       "hhs_geo_region_kbazzjca                         0.028593    0.034671   \n",
       "hhs_geo_region_lrircsnp                        -0.026782   -0.063115   \n",
       "hhs_geo_region_lzgpxyit                         0.007883    0.139647   \n",
       "hhs_geo_region_mlyzmhmf                        -0.002886   -0.047093   \n",
       "hhs_geo_region_oxchjgsf                        -0.012257   -0.093658   \n",
       "hhs_geo_region_qufhixun                        -0.003865   -0.028205   \n",
       "census_msa_MSA, Not Principle  City            -0.020972   -0.058843   \n",
       "census_msa_MSA, Principle City                 -0.024119    0.122182   \n",
       "census_msa_Non-MSA                              0.047934   -0.059091   \n",
       "respondent_id                                  -0.004393   -0.003571   \n",
       "h1n1_concern                                    0.017456    0.118134   \n",
       "h1n1_knowledge                                 -0.131358   -0.133889   \n",
       "behavioral_antiviral_meds                      -0.056471    0.057402   \n",
       "behavioral_avoidance                           -0.018133    0.017918   \n",
       "behavioral_face_mask                           -0.004406    0.035878   \n",
       "behavioral_wash_hands                          -0.011216    0.066675   \n",
       "behavioral_large_gatherings                     0.089700    0.078971   \n",
       "behavioral_outside_home                         0.088881    0.101071   \n",
       "behavioral_touch_face                           0.019215    0.058807   \n",
       "doctor_recc_h1n1                                0.032279   -0.002733   \n",
       "doctor_recc_seasonal                            0.159490    0.001091   \n",
       "chronic_med_condition                           0.160285    0.020728   \n",
       "child_under_6_months                           -0.065080    0.017356   \n",
       "health_worker                                  -0.108863   -0.002871   \n",
       "health_insurance                                0.180528   -0.052913   \n",
       "opinion_h1n1_vacc_effective                    -0.003443   -0.042774   \n",
       "opinion_h1n1_risk                              -0.049976   -0.003961   \n",
       "opinion_h1n1_sick_from_vacc                    -0.055800    0.065554   \n",
       "opinion_seas_vacc_effective                     0.113288   -0.057190   \n",
       "opinion_seas_risk                               0.014428   -0.042442   \n",
       "opinion_seas_sick_from_vacc                    -0.064548    0.079974   \n",
       "household_adults                               -0.226045   -0.038686   \n",
       "household_children                             -0.293839    0.028889   \n",
       "\n",
       "                                     race_Hispanic  race_Other or Multiple  \\\n",
       "age_group_18 - 34 Years                   0.129127                0.066571   \n",
       "age_group_35 - 44 Years                   0.051216                0.003794   \n",
       "age_group_45 - 54 Years                  -0.015944                0.008266   \n",
       "age_group_55 - 64 Years                  -0.052315               -0.022342   \n",
       "age_group_65+ Years                      -0.094354               -0.050186   \n",
       "race_Black                               -0.076230               -0.073950   \n",
       "race_Hispanic                             1.000000               -0.064990   \n",
       "race_Other or Multiple                   -0.064990                1.000000   \n",
       "race_White                               -0.514591               -0.499201   \n",
       "sex_Female                               -0.018055               -0.029986   \n",
       "sex_Male                                  0.018055                0.029986   \n",
       "hhs_geo_region_atmpeygn                  -0.032915               -0.035385   \n",
       "hhs_geo_region_bhuqouqj                  -0.035362               -0.027188   \n",
       "hhs_geo_region_dqpwygqj                   0.039642                0.006824   \n",
       "hhs_geo_region_fpwskwrf                  -0.037506               -0.020543   \n",
       "hhs_geo_region_kbazzjca                   0.090667                0.003374   \n",
       "hhs_geo_region_lrircsnp                  -0.019298                0.036338   \n",
       "hhs_geo_region_lzgpxyit                  -0.037169               -0.036775   \n",
       "hhs_geo_region_mlyzmhmf                   0.129756                0.165505   \n",
       "hhs_geo_region_oxchjgsf                  -0.012859               -0.035792   \n",
       "hhs_geo_region_qufhixun                  -0.056267               -0.030972   \n",
       "census_msa_MSA, Not Principle  City      -0.021891                0.003742   \n",
       "census_msa_MSA, Principle City            0.075333                0.024017   \n",
       "census_msa_Non-MSA                       -0.052448               -0.028653   \n",
       "respondent_id                            -0.000375                0.005186   \n",
       "h1n1_concern                              0.060890                0.038306   \n",
       "h1n1_knowledge                           -0.075800               -0.020938   \n",
       "behavioral_antiviral_meds                 0.125573                0.021058   \n",
       "behavioral_avoidance                      0.002096                0.002912   \n",
       "behavioral_face_mask                      0.088121                0.041130   \n",
       "behavioral_wash_hands                     0.034150                0.007024   \n",
       "behavioral_large_gatherings               0.072934                0.050886   \n",
       "behavioral_outside_home                   0.062685                0.039476   \n",
       "behavioral_touch_face                     0.014875                0.001801   \n",
       "doctor_recc_h1n1                         -0.002624                0.000628   \n",
       "doctor_recc_seasonal                     -0.040576                0.000677   \n",
       "chronic_med_condition                    -0.038442               -0.014138   \n",
       "child_under_6_months                      0.042507               -0.017342   \n",
       "health_worker                            -0.028429               -0.013040   \n",
       "health_insurance                         -0.180724               -0.025464   \n",
       "opinion_h1n1_vacc_effective              -0.012210               -0.016680   \n",
       "opinion_h1n1_risk                         0.080983                0.009129   \n",
       "opinion_h1n1_sick_from_vacc               0.089406                0.038411   \n",
       "opinion_seas_vacc_effective              -0.015763               -0.029405   \n",
       "opinion_seas_risk                         0.030088               -0.005817   \n",
       "opinion_seas_sick_from_vacc               0.106119                0.030036   \n",
       "household_adults                          0.104358                0.046459   \n",
       "household_children                        0.136132                0.016037   \n",
       "\n",
       "                                     race_White  sex_Female  ...  \\\n",
       "age_group_18 - 34 Years               -0.129231   -0.060616  ...   \n",
       "age_group_35 - 44 Years               -0.047220   -0.009780  ...   \n",
       "age_group_45 - 54 Years               -0.000337    0.005708  ...   \n",
       "age_group_55 - 64 Years                0.060250   -0.001505  ...   \n",
       "age_group_65+ Years                    0.098674    0.059157  ...   \n",
       "race_Black                            -0.585538    0.020885  ...   \n",
       "race_Hispanic                         -0.514591   -0.018055  ...   \n",
       "race_Other or Multiple                -0.499201   -0.029986  ...   \n",
       "race_White                             1.000000    0.014454  ...   \n",
       "sex_Female                             0.014454    1.000000  ...   \n",
       "sex_Male                              -0.014454   -1.000000  ...   \n",
       "hhs_geo_region_atmpeygn                0.066021    0.004413  ...   \n",
       "hhs_geo_region_bhuqouqj                0.091316    0.016397  ...   \n",
       "hhs_geo_region_dqpwygqj               -0.035655   -0.004135  ...   \n",
       "hhs_geo_region_fpwskwrf               -0.043722   -0.000910  ...   \n",
       "hhs_geo_region_kbazzjca               -0.080182    0.027611  ...   \n",
       "hhs_geo_region_lrircsnp                0.032890   -0.017629  ...   \n",
       "hhs_geo_region_lzgpxyit               -0.050178   -0.014545  ...   \n",
       "hhs_geo_region_mlyzmhmf               -0.144001   -0.005483  ...   \n",
       "hhs_geo_region_oxchjgsf                0.092060   -0.010155  ...   \n",
       "hhs_geo_region_qufhixun                0.071268    0.003639  ...   \n",
       "census_msa_MSA, Not Principle  City    0.050753   -0.012832  ...   \n",
       "census_msa_MSA, Principle City        -0.142141   -0.005941  ...   \n",
       "census_msa_Non-MSA                     0.088447    0.020339  ...   \n",
       "respondent_id                         -0.000414   -0.014161  ...   \n",
       "h1n1_concern                          -0.139089    0.139559  ...   \n",
       "h1n1_knowledge                         0.148516    0.082207  ...   \n",
       "behavioral_antiviral_meds             -0.127026    0.013237  ...   \n",
       "behavioral_avoidance                  -0.015076    0.124589  ...   \n",
       "behavioral_face_mask                  -0.101674    0.057966  ...   \n",
       "behavioral_wash_hands                 -0.069783    0.172405  ...   \n",
       "behavioral_large_gatherings           -0.127329    0.063934  ...   \n",
       "behavioral_outside_home               -0.129343    0.049293  ...   \n",
       "behavioral_touch_face                 -0.049750    0.178828  ...   \n",
       "doctor_recc_h1n1                       0.003062    0.041240  ...   \n",
       "doctor_recc_seasonal                   0.023385    0.079217  ...   \n",
       "chronic_med_condition                  0.017555    0.053307  ...   \n",
       "child_under_6_months                  -0.027200    0.038415  ...   \n",
       "health_worker                          0.026791    0.113346  ...   \n",
       "health_insurance                       0.159916    0.063702  ...   \n",
       "opinion_h1n1_vacc_effective            0.046070    0.026500  ...   \n",
       "opinion_h1n1_risk                     -0.051635    0.088227  ...   \n",
       "opinion_h1n1_sick_from_vacc           -0.120885    0.091361  ...   \n",
       "opinion_seas_vacc_effective            0.065438    0.056747  ...   \n",
       "opinion_seas_risk                      0.013894    0.091311  ...   \n",
       "opinion_seas_sick_from_vacc           -0.135792    0.042991  ...   \n",
       "household_adults                      -0.064282   -0.063607  ...   \n",
       "household_children                    -0.111204    0.035745  ...   \n",
       "\n",
       "                                     health_worker  health_insurance  \\\n",
       "age_group_18 - 34 Years                   0.025917         -0.183474   \n",
       "age_group_35 - 44 Years                   0.024227         -0.036864   \n",
       "age_group_45 - 54 Years                   0.032470         -0.016505   \n",
       "age_group_55 - 64 Years                   0.038912          0.032726   \n",
       "age_group_65+ Years                      -0.108863          0.180528   \n",
       "race_Black                               -0.002871         -0.052913   \n",
       "race_Hispanic                            -0.028429         -0.180724   \n",
       "race_Other or Multiple                   -0.013040         -0.025464   \n",
       "race_White                                0.026791          0.159916   \n",
       "sex_Female                                0.113346          0.063702   \n",
       "sex_Male                                 -0.113346         -0.063702   \n",
       "hhs_geo_region_atmpeygn                  -0.005302          0.000378   \n",
       "hhs_geo_region_bhuqouqj                   0.027248          0.036255   \n",
       "hhs_geo_region_dqpwygqj                  -0.009928          0.020448   \n",
       "hhs_geo_region_fpwskwrf                  -0.013520          0.033390   \n",
       "hhs_geo_region_kbazzjca                   0.012411         -0.024309   \n",
       "hhs_geo_region_lrircsnp                   0.004283         -0.019349   \n",
       "hhs_geo_region_lzgpxyit                   0.001107         -0.033382   \n",
       "hhs_geo_region_mlyzmhmf                  -0.003061         -0.009474   \n",
       "hhs_geo_region_oxchjgsf                  -0.010217         -0.016566   \n",
       "hhs_geo_region_qufhixun                  -0.005779          0.020210   \n",
       "census_msa_MSA, Not Principle  City       0.010666          0.055717   \n",
       "census_msa_MSA, Principle City           -0.008003         -0.008530   \n",
       "census_msa_Non-MSA                       -0.003711         -0.053314   \n",
       "respondent_id                            -0.005012         -0.015225   \n",
       "h1n1_concern                              0.024618         -0.004034   \n",
       "h1n1_knowledge                            0.183619          0.119497   \n",
       "behavioral_antiviral_meds                 0.006903         -0.061476   \n",
       "behavioral_avoidance                     -0.000652          0.034413   \n",
       "behavioral_face_mask                      0.065762         -0.043667   \n",
       "behavioral_wash_hands                     0.056529          0.036401   \n",
       "behavioral_large_gatherings              -0.036726         -0.056624   \n",
       "behavioral_outside_home                  -0.034437         -0.057135   \n",
       "behavioral_touch_face                     0.067317          0.011358   \n",
       "doctor_recc_h1n1                          0.075009          0.066347   \n",
       "doctor_recc_seasonal                      0.038641          0.116069   \n",
       "chronic_med_condition                    -0.017940          0.067210   \n",
       "child_under_6_months                      0.062090         -0.023838   \n",
       "health_worker                             1.000000          0.044771   \n",
       "health_insurance                          0.044771          1.000000   \n",
       "opinion_h1n1_vacc_effective               0.059135          0.058441   \n",
       "opinion_h1n1_risk                         0.120359          0.009248   \n",
       "opinion_h1n1_sick_from_vacc               0.007505         -0.036063   \n",
       "opinion_seas_vacc_effective               0.028175          0.090015   \n",
       "opinion_seas_risk                         0.097554          0.050781   \n",
       "opinion_seas_sick_from_vacc              -0.018806         -0.065473   \n",
       "household_adults                          0.017946         -0.078371   \n",
       "household_children                        0.027164         -0.070486   \n",
       "\n",
       "                                     opinion_h1n1_vacc_effective  \\\n",
       "age_group_18 - 34 Years                                -0.013108   \n",
       "age_group_35 - 44 Years                                -0.005898   \n",
       "age_group_45 - 54 Years                                -0.001992   \n",
       "age_group_55 - 64 Years                                 0.023255   \n",
       "age_group_65+ Years                                    -0.003443   \n",
       "race_Black                                             -0.042774   \n",
       "race_Hispanic                                          -0.012210   \n",
       "race_Other or Multiple                                 -0.016680   \n",
       "race_White                                              0.046070   \n",
       "sex_Female                                              0.026500   \n",
       "sex_Male                                               -0.026500   \n",
       "hhs_geo_region_atmpeygn                                -0.000613   \n",
       "hhs_geo_region_bhuqouqj                                 0.049148   \n",
       "hhs_geo_region_dqpwygqj                                -0.016528   \n",
       "hhs_geo_region_fpwskwrf                                 0.003099   \n",
       "hhs_geo_region_kbazzjca                                -0.010055   \n",
       "hhs_geo_region_lrircsnp                                -0.010382   \n",
       "hhs_geo_region_lzgpxyit                                -0.024291   \n",
       "hhs_geo_region_mlyzmhmf                                 0.004014   \n",
       "hhs_geo_region_oxchjgsf                                 0.000779   \n",
       "hhs_geo_region_qufhixun                                 0.002909   \n",
       "census_msa_MSA, Not Principle  City                     0.013733   \n",
       "census_msa_MSA, Principle City                          0.003050   \n",
       "census_msa_Non-MSA                                     -0.018394   \n",
       "respondent_id                                           0.006223   \n",
       "h1n1_concern                                            0.263004   \n",
       "h1n1_knowledge                                          0.123306   \n",
       "behavioral_antiviral_meds                               0.020690   \n",
       "behavioral_avoidance                                    0.112887   \n",
       "behavioral_face_mask                                    0.039169   \n",
       "behavioral_wash_hands                                   0.135257   \n",
       "behavioral_large_gatherings                             0.060410   \n",
       "behavioral_outside_home                                 0.057386   \n",
       "behavioral_touch_face                                   0.100454   \n",
       "doctor_recc_h1n1                                        0.171116   \n",
       "doctor_recc_seasonal                                    0.130761   \n",
       "chronic_med_condition                                   0.051357   \n",
       "child_under_6_months                                    0.005983   \n",
       "health_worker                                           0.059135   \n",
       "health_insurance                                        0.058441   \n",
       "opinion_h1n1_vacc_effective                             1.000000   \n",
       "opinion_h1n1_risk                                       0.309996   \n",
       "opinion_h1n1_sick_from_vacc                             0.070962   \n",
       "opinion_seas_vacc_effective                             0.492217   \n",
       "opinion_seas_risk                                       0.284546   \n",
       "opinion_seas_sick_from_vacc                             0.014797   \n",
       "household_adults                                        0.008088   \n",
       "household_children                                     -0.008617   \n",
       "\n",
       "                                     opinion_h1n1_risk  \\\n",
       "age_group_18 - 34 Years                       0.020768   \n",
       "age_group_35 - 44 Years                       0.036261   \n",
       "age_group_45 - 54 Years                      -0.001748   \n",
       "age_group_55 - 64 Years                       0.004316   \n",
       "age_group_65+ Years                          -0.049976   \n",
       "race_Black                                   -0.003961   \n",
       "race_Hispanic                                 0.080983   \n",
       "race_Other or Multiple                        0.009129   \n",
       "race_White                                   -0.051635   \n",
       "sex_Female                                    0.088227   \n",
       "sex_Male                                     -0.088227   \n",
       "hhs_geo_region_atmpeygn                       0.002790   \n",
       "hhs_geo_region_bhuqouqj                       0.021233   \n",
       "hhs_geo_region_dqpwygqj                      -0.014836   \n",
       "hhs_geo_region_fpwskwrf                      -0.001045   \n",
       "hhs_geo_region_kbazzjca                       0.010407   \n",
       "hhs_geo_region_lrircsnp                      -0.018105   \n",
       "hhs_geo_region_lzgpxyit                      -0.004872   \n",
       "hhs_geo_region_mlyzmhmf                      -0.007078   \n",
       "hhs_geo_region_oxchjgsf                       0.002987   \n",
       "hhs_geo_region_qufhixun                       0.001920   \n",
       "census_msa_MSA, Not Principle  City           0.001340   \n",
       "census_msa_MSA, Principle City                0.002503   \n",
       "census_msa_Non-MSA                           -0.004044   \n",
       "respondent_id                                -0.008168   \n",
       "h1n1_concern                                  0.364086   \n",
       "h1n1_knowledge                                0.076266   \n",
       "behavioral_antiviral_meds                     0.110015   \n",
       "behavioral_avoidance                          0.125075   \n",
       "behavioral_face_mask                          0.134931   \n",
       "behavioral_wash_hands                         0.166735   \n",
       "behavioral_large_gatherings                   0.126622   \n",
       "behavioral_outside_home                       0.119412   \n",
       "behavioral_touch_face                         0.154463   \n",
       "doctor_recc_h1n1                              0.272662   \n",
       "doctor_recc_seasonal                          0.176148   \n",
       "chronic_med_condition                         0.116675   \n",
       "child_under_6_months                          0.074857   \n",
       "health_worker                                 0.120359   \n",
       "health_insurance                              0.009248   \n",
       "opinion_h1n1_vacc_effective                   0.309996   \n",
       "opinion_h1n1_risk                             1.000000   \n",
       "opinion_h1n1_sick_from_vacc                   0.316171   \n",
       "opinion_seas_vacc_effective                   0.237262   \n",
       "opinion_seas_risk                             0.576598   \n",
       "opinion_seas_sick_from_vacc                   0.191251   \n",
       "household_adults                              0.025438   \n",
       "household_children                            0.070820   \n",
       "\n",
       "                                     opinion_h1n1_sick_from_vacc  \\\n",
       "age_group_18 - 34 Years                                 0.016497   \n",
       "age_group_35 - 44 Years                                 0.032107   \n",
       "age_group_45 - 54 Years                                 0.020267   \n",
       "age_group_55 - 64 Years                                -0.003204   \n",
       "age_group_65+ Years                                    -0.055800   \n",
       "race_Black                                              0.065554   \n",
       "race_Hispanic                                           0.089406   \n",
       "race_Other or Multiple                                  0.038411   \n",
       "race_White                                             -0.120885   \n",
       "sex_Female                                              0.091361   \n",
       "sex_Male                                               -0.091361   \n",
       "hhs_geo_region_atmpeygn                                -0.025916   \n",
       "hhs_geo_region_bhuqouqj                                -0.007789   \n",
       "hhs_geo_region_dqpwygqj                                 0.013047   \n",
       "hhs_geo_region_fpwskwrf                                -0.000967   \n",
       "hhs_geo_region_kbazzjca                                 0.028655   \n",
       "hhs_geo_region_lrircsnp                                -0.019697   \n",
       "hhs_geo_region_lzgpxyit                                 0.014949   \n",
       "hhs_geo_region_mlyzmhmf                                 0.008547   \n",
       "hhs_geo_region_oxchjgsf                                -0.019118   \n",
       "hhs_geo_region_qufhixun                                 0.004107   \n",
       "census_msa_MSA, Not Principle  City                     0.002959   \n",
       "census_msa_MSA, Principle City                          0.001302   \n",
       "census_msa_Non-MSA                                     -0.004621   \n",
       "respondent_id                                          -0.000891   \n",
       "h1n1_concern                                            0.334119   \n",
       "h1n1_knowledge                                         -0.027342   \n",
       "behavioral_antiviral_meds                               0.088855   \n",
       "behavioral_avoidance                                    0.144693   \n",
       "behavioral_face_mask                                    0.109115   \n",
       "behavioral_wash_hands                                   0.147016   \n",
       "behavioral_large_gatherings                             0.182794   \n",
       "behavioral_outside_home                                 0.164986   \n",
       "behavioral_touch_face                                   0.135543   \n",
       "doctor_recc_h1n1                                        0.112170   \n",
       "doctor_recc_seasonal                                    0.069468   \n",
       "chronic_med_condition                                   0.071154   \n",
       "child_under_6_months                                    0.041533   \n",
       "health_worker                                           0.007505   \n",
       "health_insurance                                       -0.036063   \n",
       "opinion_h1n1_vacc_effective                             0.070962   \n",
       "opinion_h1n1_risk                                       0.316171   \n",
       "opinion_h1n1_sick_from_vacc                             1.000000   \n",
       "opinion_seas_vacc_effective                             0.071803   \n",
       "opinion_seas_risk                                       0.247418   \n",
       "opinion_seas_sick_from_vacc                             0.506703   \n",
       "household_adults                                        0.011168   \n",
       "household_children                                      0.062152   \n",
       "\n",
       "                                     opinion_seas_vacc_effective  \\\n",
       "age_group_18 - 34 Years                                -0.074593   \n",
       "age_group_35 - 44 Years                                -0.053242   \n",
       "age_group_45 - 54 Years                                -0.044469   \n",
       "age_group_55 - 64 Years                                 0.039557   \n",
       "age_group_65+ Years                                     0.113288   \n",
       "race_Black                                             -0.057190   \n",
       "race_Hispanic                                          -0.015763   \n",
       "race_Other or Multiple                                 -0.029405   \n",
       "race_White                                              0.065438   \n",
       "sex_Female                                              0.056747   \n",
       "sex_Male                                               -0.056747   \n",
       "hhs_geo_region_atmpeygn                                -0.014073   \n",
       "hhs_geo_region_bhuqouqj                                 0.031078   \n",
       "hhs_geo_region_dqpwygqj                                 0.001184   \n",
       "hhs_geo_region_fpwskwrf                                 0.004602   \n",
       "hhs_geo_region_kbazzjca                                 0.011524   \n",
       "hhs_geo_region_lrircsnp                                -0.010866   \n",
       "hhs_geo_region_lzgpxyit                                 0.015740   \n",
       "hhs_geo_region_mlyzmhmf                                -0.014513   \n",
       "hhs_geo_region_oxchjgsf                                -0.025821   \n",
       "hhs_geo_region_qufhixun                                -0.005949   \n",
       "census_msa_MSA, Not Principle  City                     0.013295   \n",
       "census_msa_MSA, Principle City                         -0.007658   \n",
       "census_msa_Non-MSA                                     -0.006988   \n",
       "respondent_id                                           0.006177   \n",
       "h1n1_concern                                            0.225937   \n",
       "h1n1_knowledge                                          0.082054   \n",
       "behavioral_antiviral_meds                               0.014420   \n",
       "behavioral_avoidance                                    0.111536   \n",
       "behavioral_face_mask                                    0.040966   \n",
       "behavioral_wash_hands                                   0.130047   \n",
       "behavioral_large_gatherings                             0.077251   \n",
       "behavioral_outside_home                                 0.065973   \n",
       "behavioral_touch_face                                   0.096022   \n",
       "doctor_recc_h1n1                                        0.111816   \n",
       "doctor_recc_seasonal                                    0.189447   \n",
       "chronic_med_condition                                   0.096033   \n",
       "child_under_6_months                                    0.006128   \n",
       "health_worker                                           0.028175   \n",
       "health_insurance                                        0.090015   \n",
       "opinion_h1n1_vacc_effective                             0.492217   \n",
       "opinion_h1n1_risk                                       0.237262   \n",
       "opinion_h1n1_sick_from_vacc                             0.071803   \n",
       "opinion_seas_vacc_effective                             1.000000   \n",
       "opinion_seas_risk                                       0.356482   \n",
       "opinion_seas_sick_from_vacc                            -0.012330   \n",
       "household_adults                                       -0.023614   \n",
       "household_children                                     -0.071924   \n",
       "\n",
       "                                     opinion_seas_risk  \\\n",
       "age_group_18 - 34 Years                      -0.025974   \n",
       "age_group_35 - 44 Years                      -0.008853   \n",
       "age_group_45 - 54 Years                      -0.008999   \n",
       "age_group_55 - 64 Years                       0.025985   \n",
       "age_group_65+ Years                           0.014428   \n",
       "race_Black                                   -0.042442   \n",
       "race_Hispanic                                 0.030088   \n",
       "race_Other or Multiple                       -0.005817   \n",
       "race_White                                    0.013894   \n",
       "sex_Female                                    0.091311   \n",
       "sex_Male                                     -0.091311   \n",
       "hhs_geo_region_atmpeygn                       0.002003   \n",
       "hhs_geo_region_bhuqouqj                       0.016434   \n",
       "hhs_geo_region_dqpwygqj                      -0.012173   \n",
       "hhs_geo_region_fpwskwrf                       0.000396   \n",
       "hhs_geo_region_kbazzjca                       0.011738   \n",
       "hhs_geo_region_lrircsnp                      -0.010140   \n",
       "hhs_geo_region_lzgpxyit                      -0.004729   \n",
       "hhs_geo_region_mlyzmhmf                      -0.006185   \n",
       "hhs_geo_region_oxchjgsf                      -0.007910   \n",
       "hhs_geo_region_qufhixun                       0.005574   \n",
       "census_msa_MSA, Not Principle  City           0.012215   \n",
       "census_msa_MSA, Principle City               -0.011720   \n",
       "census_msa_Non-MSA                           -0.001644   \n",
       "respondent_id                                -0.005187   \n",
       "h1n1_concern                                  0.331046   \n",
       "h1n1_knowledge                                0.087969   \n",
       "behavioral_antiviral_meds                     0.085132   \n",
       "behavioral_avoidance                          0.137673   \n",
       "behavioral_face_mask                          0.109869   \n",
       "behavioral_wash_hands                         0.175862   \n",
       "behavioral_large_gatherings                   0.123392   \n",
       "behavioral_outside_home                       0.114285   \n",
       "behavioral_touch_face                         0.141229   \n",
       "doctor_recc_h1n1                              0.209005   \n",
       "doctor_recc_seasonal                          0.247406   \n",
       "chronic_med_condition                         0.153101   \n",
       "child_under_6_months                          0.042765   \n",
       "health_worker                                 0.097554   \n",
       "health_insurance                              0.050781   \n",
       "opinion_h1n1_vacc_effective                   0.284546   \n",
       "opinion_h1n1_risk                             0.576598   \n",
       "opinion_h1n1_sick_from_vacc                   0.247418   \n",
       "opinion_seas_vacc_effective                   0.356482   \n",
       "opinion_seas_risk                             1.000000   \n",
       "opinion_seas_sick_from_vacc                   0.189387   \n",
       "household_adults                              0.004907   \n",
       "household_children                            0.018464   \n",
       "\n",
       "                                     opinion_seas_sick_from_vacc  \\\n",
       "age_group_18 - 34 Years                                 0.034388   \n",
       "age_group_35 - 44 Years                                 0.034629   \n",
       "age_group_45 - 54 Years                                 0.011325   \n",
       "age_group_55 - 64 Years                                -0.004689   \n",
       "age_group_65+ Years                                    -0.064548   \n",
       "race_Black                                              0.079974   \n",
       "race_Hispanic                                           0.106119   \n",
       "race_Other or Multiple                                  0.030036   \n",
       "race_White                                             -0.135792   \n",
       "sex_Female                                              0.042991   \n",
       "sex_Male                                               -0.042991   \n",
       "hhs_geo_region_atmpeygn                                -0.007668   \n",
       "hhs_geo_region_bhuqouqj                                -0.011747   \n",
       "hhs_geo_region_dqpwygqj                                 0.020471   \n",
       "hhs_geo_region_fpwskwrf                                -0.005078   \n",
       "hhs_geo_region_kbazzjca                                 0.028534   \n",
       "hhs_geo_region_lrircsnp                                -0.011162   \n",
       "hhs_geo_region_lzgpxyit                                 0.010585   \n",
       "hhs_geo_region_mlyzmhmf                                 0.012556   \n",
       "hhs_geo_region_oxchjgsf                                -0.022636   \n",
       "hhs_geo_region_qufhixun                                -0.009966   \n",
       "census_msa_MSA, Not Principle  City                    -0.010244   \n",
       "census_msa_MSA, Principle City                          0.015434   \n",
       "census_msa_Non-MSA                                     -0.004337   \n",
       "respondent_id                                           0.013406   \n",
       "h1n1_concern                                            0.229496   \n",
       "h1n1_knowledge                                         -0.067090   \n",
       "behavioral_antiviral_meds                               0.090346   \n",
       "behavioral_avoidance                                    0.100983   \n",
       "behavioral_face_mask                                    0.099567   \n",
       "behavioral_wash_hands                                   0.091476   \n",
       "behavioral_large_gatherings                             0.137375   \n",
       "behavioral_outside_home                                 0.140509   \n",
       "behavioral_touch_face                                   0.099952   \n",
       "doctor_recc_h1n1                                        0.056939   \n",
       "doctor_recc_seasonal                                    0.028052   \n",
       "chronic_med_condition                                   0.048277   \n",
       "child_under_6_months                                    0.028548   \n",
       "health_worker                                          -0.018806   \n",
       "health_insurance                                       -0.065473   \n",
       "opinion_h1n1_vacc_effective                             0.014797   \n",
       "opinion_h1n1_risk                                       0.191251   \n",
       "opinion_h1n1_sick_from_vacc                             0.506703   \n",
       "opinion_seas_vacc_effective                            -0.012330   \n",
       "opinion_seas_risk                                       0.189387   \n",
       "opinion_seas_sick_from_vacc                             1.000000   \n",
       "household_adults                                        0.033365   \n",
       "household_children                                      0.045259   \n",
       "\n",
       "                                     household_adults  household_children  \n",
       "age_group_18 - 34 Years                      0.195026            0.194887  \n",
       "age_group_35 - 44 Years                      0.028164            0.361452  \n",
       "age_group_45 - 54 Years                      0.071002            0.040425  \n",
       "age_group_55 - 64 Years                     -0.041026           -0.218747  \n",
       "age_group_65+ Years                         -0.226045           -0.293839  \n",
       "race_Black                                  -0.038686            0.028889  \n",
       "race_Hispanic                                0.104358            0.136132  \n",
       "race_Other or Multiple                       0.046459            0.016037  \n",
       "race_White                                  -0.064282           -0.111204  \n",
       "sex_Female                                  -0.063607            0.035745  \n",
       "sex_Male                                     0.063607           -0.035745  \n",
       "hhs_geo_region_atmpeygn                     -0.010571            0.007430  \n",
       "hhs_geo_region_bhuqouqj                      0.021212           -0.007933  \n",
       "hhs_geo_region_dqpwygqj                      0.017664            0.008925  \n",
       "hhs_geo_region_fpwskwrf                     -0.038046           -0.014966  \n",
       "hhs_geo_region_kbazzjca                     -0.031985            0.005133  \n",
       "hhs_geo_region_lrircsnp                      0.013904            0.019981  \n",
       "hhs_geo_region_lzgpxyit                      0.007993           -0.020902  \n",
       "hhs_geo_region_mlyzmhmf                      0.034123            0.003250  \n",
       "hhs_geo_region_oxchjgsf                      0.003029            0.015848  \n",
       "hhs_geo_region_qufhixun                     -0.007060           -0.004535  \n",
       "census_msa_MSA, Not Principle  City          0.053792            0.045618  \n",
       "census_msa_MSA, Principle City              -0.039341           -0.021022  \n",
       "census_msa_Non-MSA                          -0.019754           -0.029336  \n",
       "respondent_id                                0.000212           -0.005380  \n",
       "h1n1_concern                                -0.022742            0.042480  \n",
       "h1n1_knowledge                               0.019922            0.057424  \n",
       "behavioral_antiviral_meds                    0.040994            0.077282  \n",
       "behavioral_avoidance                         0.011758            0.031677  \n",
       "behavioral_face_mask                         0.029713           -0.003627  \n",
       "behavioral_wash_hands                        0.005471            0.042604  \n",
       "behavioral_large_gatherings                 -0.034181           -0.013623  \n",
       "behavioral_outside_home                     -0.027924           -0.019263  \n",
       "behavioral_touch_face                       -0.002797            0.016009  \n",
       "doctor_recc_h1n1                             0.003449            0.009442  \n",
       "doctor_recc_seasonal                        -0.036989           -0.054183  \n",
       "chronic_med_condition                       -0.069621           -0.099440  \n",
       "child_under_6_months                         0.045331            0.092393  \n",
       "health_worker                                0.017946            0.027164  \n",
       "health_insurance                            -0.078371           -0.070486  \n",
       "opinion_h1n1_vacc_effective                  0.008088           -0.008617  \n",
       "opinion_h1n1_risk                            0.025438            0.070820  \n",
       "opinion_h1n1_sick_from_vacc                  0.011168            0.062152  \n",
       "opinion_seas_vacc_effective                 -0.023614           -0.071924  \n",
       "opinion_seas_risk                            0.004907            0.018464  \n",
       "opinion_seas_sick_from_vacc                  0.033365            0.045259  \n",
       "household_adults                             1.000000            0.167123  \n",
       "household_children                           0.167123            1.000000  \n",
       "\n",
       "[48 rows x 48 columns]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data= X_sm\n",
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted Feature Importances:\n",
      "doctor_recc_h1n1: 0.3980680936071827\n",
      "opinion_h1n1_vacc_effective: 0.25246855544618696\n",
      "opinion_h1n1_risk: 0.1148107327723949\n",
      "opinion_seas_risk: 0.10740556615611911\n",
      "h1n1_knowledge: 0.02227761984460041\n",
      "health_worker: 0.02124945390068658\n",
      "race_White: 0.01809572626715784\n",
      "doctor_recc_seasonal: 0.011082624130527113\n",
      "opinion_seas_vacc_effective: 0.00935054005945494\n",
      "respondent_id: 0.009108802188008434\n",
      "health_insurance: 0.008618931476780908\n",
      "h1n1_concern: 0.0038798917206360256\n",
      "chronic_med_condition: 0.0034056198670053195\n",
      "household_adults: 0.003142802183471779\n",
      "household_children: 0.0026673107601932217\n",
      "opinion_seas_sick_from_vacc: 0.00242508721945389\n",
      "age_group_18 - 34 Years: 0.0019291861172836\n",
      "census_msa_MSA, Not Principle  City: 0.0018141588542154416\n",
      "age_group_65+ Years: 0.0017523226808550767\n",
      "age_group_45 - 54 Years: 0.0017451972863770262\n",
      "behavioral_avoidance: 0.001466469317513998\n",
      "sex_Male: 0.0008342709618745959\n",
      "hhs_geo_region_lzgpxyit: 0.0006291442194956013\n",
      "opinion_h1n1_sick_from_vacc: 0.00032361015917609944\n",
      "race_Other or Multiple: 0.0003221981002871426\n",
      "hhs_geo_region_kbazzjca: 0.00031598999242276476\n",
      "sex_Female: 0.000251751523193821\n",
      "hhs_geo_region_mlyzmhmf: 0.00022181071516399478\n",
      "hhs_geo_region_atmpeygn: 0.00013993239577786475\n",
      "behavioral_wash_hands: 0.00012466893385536872\n",
      "age_group_55 - 64 Years: 7.193114264764439e-05\n",
      "age_group_35 - 44 Years: 0.0\n",
      "race_Black: 0.0\n",
      "race_Hispanic: 0.0\n",
      "hhs_geo_region_bhuqouqj: 0.0\n",
      "hhs_geo_region_dqpwygqj: 0.0\n",
      "hhs_geo_region_fpwskwrf: 0.0\n",
      "hhs_geo_region_lrircsnp: 0.0\n",
      "hhs_geo_region_oxchjgsf: 0.0\n",
      "hhs_geo_region_qufhixun: 0.0\n",
      "census_msa_MSA, Principle City: 0.0\n",
      "census_msa_Non-MSA: 0.0\n",
      "behavioral_antiviral_meds: 0.0\n",
      "behavioral_face_mask: 0.0\n",
      "behavioral_large_gatherings: 0.0\n",
      "behavioral_outside_home: 0.0\n",
      "behavioral_touch_face: 0.0\n",
      "child_under_6_months: 0.0\n"
     ]
    }
   ],
   "source": [
    "# Pair feature importances with corresponding column names\n",
    "if isinstance(X_sm, np.ndarray):\n",
    "    # If X_tr_smote is a NumPy array, use generic feature names\n",
    "    feature_names = [f'feature_{i}' for i in range(X_sm.shape[1])]\n",
    "else:\n",
    "    # If X_tr_smote is a DataFrame, use its column names\n",
    "    feature_names = X_sm.columns\n",
    "\n",
    "feature_importance_dict = dict(zip(feature_names, feature_importances))\n",
    "\n",
    "# Sort features by importance in descending order\n",
    "sorted_feature_importance = sorted(feature_importance_dict.items(), key=lambda x: x[1], reverse=True)\n",
    "\n",
    "# Display the sorted feature importances\n",
    "print(\"Sorted Feature Importances:\")\n",
    "\n",
    "for feature, importance in sorted_feature_importance:\n",
    "    print(f\"{feature}: {importance}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('doctor_recc_h1n1', 0.3980680936071827),\n",
       " ('opinion_h1n1_vacc_effective', 0.25246855544618696),\n",
       " ('opinion_h1n1_risk', 0.1148107327723949),\n",
       " ('opinion_seas_risk', 0.10740556615611911),\n",
       " ('h1n1_knowledge', 0.02227761984460041),\n",
       " ('health_worker', 0.02124945390068658),\n",
       " ('race_White', 0.01809572626715784),\n",
       " ('doctor_recc_seasonal', 0.011082624130527113),\n",
       " ('opinion_seas_vacc_effective', 0.00935054005945494),\n",
       " ('respondent_id', 0.009108802188008434),\n",
       " ('health_insurance', 0.008618931476780908),\n",
       " ('h1n1_concern', 0.0038798917206360256),\n",
       " ('chronic_med_condition', 0.0034056198670053195),\n",
       " ('household_adults', 0.003142802183471779),\n",
       " ('household_children', 0.0026673107601932217),\n",
       " ('opinion_seas_sick_from_vacc', 0.00242508721945389),\n",
       " ('age_group_18 - 34 Years', 0.0019291861172836),\n",
       " ('census_msa_MSA, Not Principle  City', 0.0018141588542154416),\n",
       " ('age_group_65+ Years', 0.0017523226808550767),\n",
       " ('age_group_45 - 54 Years', 0.0017451972863770262),\n",
       " ('behavioral_avoidance', 0.001466469317513998),\n",
       " ('sex_Male', 0.0008342709618745959),\n",
       " ('hhs_geo_region_lzgpxyit', 0.0006291442194956013),\n",
       " ('opinion_h1n1_sick_from_vacc', 0.00032361015917609944),\n",
       " ('race_Other or Multiple', 0.0003221981002871426),\n",
       " ('hhs_geo_region_kbazzjca', 0.00031598999242276476),\n",
       " ('sex_Female', 0.000251751523193821),\n",
       " ('hhs_geo_region_mlyzmhmf', 0.00022181071516399478),\n",
       " ('hhs_geo_region_atmpeygn', 0.00013993239577786475),\n",
       " ('behavioral_wash_hands', 0.00012466893385536872),\n",
       " ('age_group_55 - 64 Years', 7.193114264764439e-05),\n",
       " ('age_group_35 - 44 Years', 0.0),\n",
       " ('race_Black', 0.0),\n",
       " ('race_Hispanic', 0.0),\n",
       " ('hhs_geo_region_bhuqouqj', 0.0),\n",
       " ('hhs_geo_region_dqpwygqj', 0.0),\n",
       " ('hhs_geo_region_fpwskwrf', 0.0),\n",
       " ('hhs_geo_region_lrircsnp', 0.0),\n",
       " ('hhs_geo_region_oxchjgsf', 0.0),\n",
       " ('hhs_geo_region_qufhixun', 0.0),\n",
       " ('census_msa_MSA, Principle City', 0.0),\n",
       " ('census_msa_Non-MSA', 0.0),\n",
       " ('behavioral_antiviral_meds', 0.0),\n",
       " ('behavioral_face_mask', 0.0),\n",
       " ('behavioral_large_gatherings', 0.0),\n",
       " ('behavioral_outside_home', 0.0),\n",
       " ('behavioral_touch_face', 0.0),\n",
       " ('child_under_6_months', 0.0)]"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted_feature_importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
